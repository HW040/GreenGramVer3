[2024-12-02 09:40:19 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 09:40:19 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 09:40:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 09:40:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 09:40:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 09:40:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 09:40:20 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 09:40:20 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 09:40:20 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 09:40:20 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 983 ms
[2024-12-02 09:40:20 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 09:40:20 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 09:40:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 09:40:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 09:40:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 09:40:20 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 2.033 seconds (process running for 2.478)
[2024-12-02 09:40:22 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 09:40:22 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 09:40:22 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 09:40:22 INFO http-nio-8080-exec-7] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 09:40:22 INFO http-nio-8080-exec-7] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 09:40:22 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 09:40:22 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3cb1efec
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 09:40:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 10 msec}
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 09:40:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 09:40:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 09:40:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 09:40:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 09:40:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 09:40:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 09:40:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg])
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg])
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg])
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg])
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg])
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg])
[2024-12-02 09:40:23 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[])
[2024-12-02 09:40:26 INFO http-nio-8080-exec-7] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@49b0e144
[2024-12-02 09:40:26 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed_like
        where user_id =2
        and feed_id =24
 {executed in 1 msec}
[2024-12-02 09:40:26 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set
        feed_id =24
        , user_id =2
 {executed in 3 msec}
[2024-12-02 09:40:26 INFO http-nio-8080-exec-1] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@2a030508
[2024-12-02 09:40:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed_like
        where user_id =2
        and feed_id =24
 {executed in 2 msec}
[2024-12-02 09:50:09 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 30 class path changes (0 additions, 0 deletions, 30 modifications)
[2024-12-02 09:50:09 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 09:50:09 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 09:50:09 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 09:50:09 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 09:50:09 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 09:50:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 09:50:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 09:50:10 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 09:50:10 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 09:50:10 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 09:50:10 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 205 ms
[2024-12-02 09:50:10 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 09:50:10 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 09:50:10 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 09:50:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 09:50:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 09:50:10 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.38 seconds (process running for 592.126)
[2024-12-02 09:50:10 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 10:04:57 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-02 10:04:57 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 10:04:57 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 10:04:57 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 10:04:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 10:04:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 10:04:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 10:04:58 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 10:04:58 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 10:04:58 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 191 ms
[2024-12-02 10:04:58 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 10:04:58 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 10:04:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 10:04:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 10:04:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 10:04:58 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.328 seconds (process running for 1472.438)
[2024-12-02 10:04:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:00:30 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-02 11:00:30 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:00:30 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 11:00:30 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:00:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:00:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:00:30 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:00:30 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:00:30 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:00:30 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 182 ms
[2024-12-02 11:00:30 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 11:00:30 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:00:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:00:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:00:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:00:30 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.329 seconds (process running for 4805.103)
[2024-12-02 11:00:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:05:09 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-02 11:05:09 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:05:09 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 11:05:09 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:05:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:05:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:05:09 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:05:09 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:05:09 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:05:09 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 178 ms
[2024-12-02 11:05:09 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 11:05:09 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:05:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:05:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:05:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:05:09 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.324 seconds (process running for 5083.917)
[2024-12-02 11:05:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:40:00 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 31 class path changes (5 additions, 0 deletions, 26 modifications)
[2024-12-02 11:40:00 INFO Thread-19] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:40:00 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 11:40:00 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:40:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:40:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:40:00 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:40:00 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:40:00 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:40:00 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 180 ms
[2024-12-02 11:40:00 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 11:40:00 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:40:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:40:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:40:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:40:00 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.333 seconds (process running for 7174.967)
[2024-12-02 11:40:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:46:58 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-02 11:46:58 INFO Thread-23] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:46:58 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 11:46:58 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:46:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:46:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:46:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:46:58 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:46:58 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:46:58 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 173 ms
[2024-12-02 11:46:58 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 11:46:58 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:46:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:46:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:46:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:46:58 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.307 seconds (process running for 7592.814)
[2024-12-02 11:46:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:47:13 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-02 11:47:13 INFO Thread-27] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:13 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 11:47:13 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:47:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:47:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:13 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:47:13 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:47:13 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:47:13 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 174 ms
[2024-12-02 11:47:13 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 11:47:13 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:47:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:47:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:47:13 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.306 seconds (process running for 7607.887)
[2024-12-02 11:47:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:47:19 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-02 11:47:19 INFO Thread-31] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:19 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 11:47:19 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:47:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:47:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:19 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:47:19 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:47:19 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:47:19 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 169 ms
[2024-12-02 11:47:19 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 11:47:19 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:47:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:47:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:47:19 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.293 seconds (process running for 7613.762)
[2024-12-02 11:47:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:47:27 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-02 11:47:27 INFO Thread-35] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:27 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 11:47:27 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:47:27 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:47:27 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:27 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:47:27 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:47:27 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:47:27 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 172 ms
[2024-12-02 11:47:27 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 11:47:27 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:47:27 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:47:27 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:27 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:47:27 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.311 seconds (process running for 7621.676)
[2024-12-02 11:47:27 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:47:38 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-02 11:47:38 INFO Thread-39] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:38 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 11:47:38 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:47:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:47:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:38 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:47:38 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:47:38 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:47:38 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 168 ms
[2024-12-02 11:47:38 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 11:47:38 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:47:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:47:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:47:38 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.286 seconds (process running for 7632.674)
[2024-12-02 11:47:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:47:59 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-02 11:47:59 INFO Thread-43] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:59 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 11:47:59 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:47:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:47:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:59 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:47:59 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:47:59 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:47:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 166 ms
[2024-12-02 11:47:59 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 11:47:59 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:47:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:47:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:47:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:47:59 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.291 seconds (process running for 7653.837)
[2024-12-02 11:47:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:48:15 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-02 11:48:15 INFO Thread-47] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:48:15 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 11:48:15 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:48:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:48:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:48:15 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:48:15 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:48:15 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:48:15 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 170 ms
[2024-12-02 11:48:15 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 11:48:15 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:48:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:48:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:48:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:48:15 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.296 seconds (process running for 7669.839)
[2024-12-02 11:48:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:07:26 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 31 class path changes (0 additions, 0 deletions, 31 modifications)
[2024-12-02 12:07:26 INFO Thread-51] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:07:26 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 12:07:26 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:07:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:07:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:07:26 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:07:26 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:07:26 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:07:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 188 ms
[2024-12-02 12:07:26 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 12:07:26 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:07:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:07:27 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:07:27 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:07:27 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.34 seconds (process running for 8821.179)
[2024-12-02 12:07:27 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:13:22 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 12:13:22 INFO Thread-55] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:13:22 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6328 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 12:13:22 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:13:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:13:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:13:22 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:13:22 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:13:22 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:13:22 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 175 ms
[2024-12-02 12:13:22 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 12:13:22 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:13:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:13:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:13:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:13:22 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.298 seconds (process running for 9176.554)
[2024-12-02 12:13:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:13:41 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11076 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 12:13:41 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:13:41 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:13:41 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:13:41 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:13:41 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:13:41 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:13:41 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:13:41 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:13:41 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 867 ms
[2024-12-02 12:13:41 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 12:13:42 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:13:42 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:13:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:13:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:13:42 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.734 seconds (process running for 2.088)
[2024-12-02 12:13:44 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 12:13:44 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 12:13:44 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1e92aacf
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 12:13:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 12:13:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 12:13:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 12:13:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 12:13:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 1 msec}
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 12:13:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 12:13:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 12:13:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 1 msec}
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg])
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg])
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg])
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg])
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg])
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg])
[2024-12-02 12:13:44 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[])
[2024-12-02 12:13:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        ( feed_id, user_id, comment)
        values
        ( 24, 2, '안녕' )
 {executed in 2 msec}
[2024-12-02 12:13:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        ( feed_id, user_id, comment)
        values
        ( 24, 2, '안녕' )
 {executed in 0 msec}
[2024-12-02 12:13:49 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|1         |
|----------|

[2024-12-02 12:23:00 INFO http-nio-8080-exec-7] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:45:04 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-02 12:45:04 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:45:04 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 12:45:04 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 12:45:04 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11076 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 12:45:04 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:45:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:45:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:45:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:45:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:45:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:45:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 250 ms
[2024-12-02 12:45:04 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 12:45:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:45:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:45:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:45:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:45:04 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.445 seconds (process running for 1884.347)
[2024-12-02 12:45:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:49:54 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-02 12:49:54 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:49:54 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11076 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 12:49:54 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:49:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:49:54 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:49:54 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:49:54 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:49:54 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:49:54 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 197 ms
[2024-12-02 12:49:54 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 12:49:54 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:49:54 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:49:54 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:49:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:49:54 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.365 seconds (process running for 2174.127)
[2024-12-02 12:49:54 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 13:02:59 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
[2024-12-02 13:02:59 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 13:02:59 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11076 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 13:02:59 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 13:02:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 13:02:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 13:02:59 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 13:02:59 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 13:02:59 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 13:02:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 174 ms
[2024-12-02 13:02:59 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 13:02:59 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 13:02:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 13:02:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 13:02:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 13:02:59 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.33 seconds (process running for 2959.062)
[2024-12-02 13:02:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 13:09:21 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 13:09:21 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 13:09:21 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11076 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 13:09:21 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 13:09:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 13:09:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 13:09:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 13:09:21 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 13:09:21 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 13:09:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 198 ms
[2024-12-02 13:09:21 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 13:09:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 13:09:21 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 13:09:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 13:09:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 13:09:21 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.366 seconds (process running for 3341.354)
[2024-12-02 13:09:21 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 15:54:27 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3444 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 15:54:27 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 15:54:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 15:54:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 15:54:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 15:54:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:54:28 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 15:54:28 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 15:54:28 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 15:54:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 785 ms
[2024-12-02 15:54:28 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 15:54:28 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 15:54:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 15:54:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:54:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 15:54:28 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.664 seconds (process running for 2.006)
[2024-12-02 15:56:28 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 15:56:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 15:56:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 15:56:28 INFO http-nio-8080-exec-9] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 15:56:28 INFO http-nio-8080-exec-9] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 15:56:28 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 15:56:28 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 15:56:28 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@302ac3f1
[2024-12-02 15:56:28 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 15:56:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 15:56:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 15:56:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 15:56:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 15:56:28 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): green.greengram.Feed.comment.FeedCommentMapper.selFeedcommentList] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): green.greengram.Feed.comment.FeedCommentMapper.selFeedcommentList
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedcommentList(Unknown Source)
	at green.greengram.Feed.FeedService.getFeed(FeedService.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at green.greengram.Feed.FeedService$$SpringCGLIB$$0.getFeed(<generated>)
	at green.greengram.Feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:15:08 INFO http-nio-8080-exec-9] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:15:08 INFO http-nio-8080-exec-9] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:15:08 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:15:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:15:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:15:08 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:15:08 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:15:08 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): green.greengram.Feed.comment.FeedCommentMapper.selFeedcommentList] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): green.greengram.Feed.comment.FeedCommentMapper.selFeedcommentList
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedcommentList(Unknown Source)
	at green.greengram.Feed.FeedService.getFeed(FeedService.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at green.greengram.Feed.FeedService$$SpringCGLIB$$0.getFeed(<generated>)
	at green.greengram.Feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:15:09 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 9 class path changes (0 additions, 0 deletions, 9 modifications)
[2024-12-02 16:15:09 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:15:09 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:15:09 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:15:09 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3444 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:15:09 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:15:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:15:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:15:09 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:15:09 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:15:09 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:15:09 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 191 ms
[2024-12-02 16:15:09 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:15:09 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:15:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:15:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:15:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:15:09 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.39 seconds (process running for 1242.847)
[2024-12-02 16:15:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 16:15:09 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:15:09 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:15:09 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 16:15:16 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2412 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:15:16 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:15:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:15:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:15:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:15:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:15:17 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:15:17 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:15:17 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:15:17 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 769 ms
[2024-12-02 16:15:17 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:15:17 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:15:17 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:15:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:15:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:15:17 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.65 seconds (process running for 1.991)
[2024-12-02 16:24:47 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 8644 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:24:47 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:24:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:24:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:24:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:24:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:24:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:24:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:24:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:24:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 836 ms
[2024-12-02 16:24:48 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:24:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:24:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:24:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:24:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:24:48 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.677 seconds (process running for 2.019)
[2024-12-02 16:24:52 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:24:52 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:24:52 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:24:52 INFO http-nio-8080-exec-7] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:24:52 INFO http-nio-8080-exec-7] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:24:52 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:24:52 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:24:52 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2c1cf176
[2024-12-02 16:24:52 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:24:52 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:24:52 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:24:52 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 16:24:52 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:24:52 ERRORhttp-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): green.greengram.Feed.comment.FeedCommentMapper.selFeedcommentList] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): green.greengram.Feed.comment.FeedCommentMapper.selFeedcommentList
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedcommentList(Unknown Source)
	at green.greengram.Feed.FeedService.getFeed(FeedService.java:81)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at green.greengram.Feed.FeedService$$SpringCGLIB$$0.getFeed(<generated>)
	at green.greengram.Feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:25:00 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:25:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:25:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:25:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:25:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:25:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:25:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:25:00 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): green.greengram.Feed.comment.FeedCommentMapper.selFeedcommentList] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): green.greengram.Feed.comment.FeedCommentMapper.selFeedcommentList
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedcommentList(Unknown Source)
	at green.greengram.Feed.FeedService.getFeed(FeedService.java:81)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at green.greengram.Feed.FeedService$$SpringCGLIB$$0.getFeed(<generated>)
	at green.greengram.Feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:25:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:25:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:25:56 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5704 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:25:56 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:25:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:25:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:25:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:25:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:25:57 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:25:57 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:25:57 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:25:57 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 836 ms
[2024-12-02 16:25:57 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:25:57 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:25:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:25:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:25:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:25:57 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.709 seconds (process running for 2.038)
[2024-12-02 16:25:59 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:25:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:25:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 16:25:59 INFO http-nio-8080-exec-6] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:25:59 INFO http-nio-8080-exec-6] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:25:59 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:25:59 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:25:59 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2ccb23bd
[2024-12-02 16:25:59 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:25:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:25:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:25:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 16 msec}
[2024-12-02 16:25:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:25:59 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): green.greengram.Feed.comment.FeedCommentMapper.selFeedcommentList] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): green.greengram.Feed.comment.FeedCommentMapper.selFeedcommentList
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedcommentList(Unknown Source)
	at green.greengram.Feed.FeedService.getFeed(FeedService.java:81)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at green.greengram.Feed.FeedService$$SpringCGLIB$$0.getFeed(<generated>)
	at green.greengram.Feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:27:30 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:27:30 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:27:31 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 8072 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:27:31 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:27:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:27:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:27:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:27:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:27:32 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:27:32 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:27:32 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:27:32 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 776 ms
[2024-12-02 16:27:32 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:27:33 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:27:33 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:27:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:27:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:27:33 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.637 seconds (process running for 1.968)
[2024-12-02 16:27:35 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:27:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:27:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 16:27:35 INFO http-nio-8080-exec-6] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:27:35 INFO http-nio-8080-exec-6] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:27:35 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:27:35 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:27:35 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2ccb23bd
[2024-12-02 16:27:35 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:27:35 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:27:35 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:27:35 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): green.greengram.Feed.comment.FeedCommentMapper.selFeedcommentList] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): green.greengram.Feed.comment.FeedCommentMapper.selFeedcommentList
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedcommentList(Unknown Source)
	at green.greengram.Feed.FeedService.getFeed(FeedService.java:81)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at green.greengram.Feed.FeedService$$SpringCGLIB$$0.getFeed(<generated>)
	at green.greengram.Feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:29:10 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:29:10 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:29:12 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10308 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:29:12 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:29:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:29:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:29:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:29:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:29:13 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:29:13 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:29:13 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:29:13 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 805 ms
[2024-12-02 16:29:13 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:29:13 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:29:14 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:29:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:29:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:29:14 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.705 seconds (process running for 2.054)
[2024-12-02 16:29:14 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:29:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:29:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 16:29:14 INFO http-nio-8080-exec-6] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:29:14 INFO http-nio-8080-exec-6] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:29:14 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:29:14 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e74025d
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:29:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@62cdcabc)
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@6088a6dc)
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@51c27b64)
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@57e6478f)
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@5bf2ffe5)
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@7ee91c01)
[2024-12-02 16:29:15 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@3cb251e3)
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 1 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:29:44 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@44d2410)
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@197f29d)
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@1a321a73)
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@73682c3c)
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@1ee8ebe5)
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@2055e1bf)
[2024-12-02 16:29:44 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@2a3e8644)
[2024-12-02 16:30:55 INFO http-nio-8080-exec-5] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:30:55 INFO http-nio-8080-exec-5] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:30:55 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:30:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:30:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:30:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:30:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:30:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:30:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:30:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:30:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:30:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:30:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:30:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:30:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:30:55 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:30:55 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:30:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:30:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:30:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:30:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:30:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:30:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:30:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:30:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@52a28684)
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@70b2be57)
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@38f8fd83)
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@25575ee6)
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@63876a6e)
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@6a2204f)
[2024-12-02 16:30:56 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@79c9d1fd)
[2024-12-02 16:32:30 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:32:30 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:32:32 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10760 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:32:32 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:32:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:32:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:32:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:32:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:32:33 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:32:33 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:32:33 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:32:33 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 773 ms
[2024-12-02 16:32:33 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:32:33 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:32:33 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:32:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:32:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:32:33 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.628 seconds (process running for 1.961)
[2024-12-02 16:32:38 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:32:38 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:32:38 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7ed90122
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:32:39 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:32:39 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:32:39 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:32:39 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:32:39 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:32:39 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:32:39 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:32:39 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=null)
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=null)
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=null)
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=null)
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=null)
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=null)
[2024-12-02 16:32:39 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=null)
[2024-12-02 16:35:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:35:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:35:56 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7472 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:35:56 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:35:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:35:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:35:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:35:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:35:57 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:35:57 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:35:57 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:35:57 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 780 ms
[2024-12-02 16:35:57 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:35:57 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:35:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:35:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:35:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:35:58 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.655 seconds (process running for 1.994)
[2024-12-02 16:36:00 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:36:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:36:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@665cc334
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 1 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:36:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@72e0886e)
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@3852bd7e)
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@22e9c52)
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@7943c0fb)
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@f169445)
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@22827194)
[2024-12-02 16:36:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@5438a59a)
[2024-12-02 16:37:03 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-02 16:37:03 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:37:03 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:37:03 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:37:03 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7472 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:37:03 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:37:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:37:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:37:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:37:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:37:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:37:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 185 ms
[2024-12-02 16:37:04 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:37:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:37:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:37:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:37:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:37:04 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 0.332 seconds (process running for 68.018)
[2024-12-02 16:37:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 16:37:49 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7492 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:37:49 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:37:49 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:37:49 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:37:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:37:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:37:50 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:37:50 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:37:50 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:37:50 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 770 ms
[2024-12-02 16:37:50 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:37:50 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:37:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:37:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:37:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:37:50 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.635 seconds (process running for 1.965)
[2024-12-02 16:37:54 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:37:54 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:37:54 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2ccb23bd
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 1 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:37:54 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@390654d7)
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@66abf014)
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@3bbf24a0)
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@8369e57)
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@31dc36a)
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@3a8fb84d)
[2024-12-02 16:37:54 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@78571198)
[2024-12-02 16:38:34 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:38:34 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:38:35 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10844 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:38:35 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:38:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:38:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:38:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:38:36 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:38:36 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:38:36 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:38:36 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:38:36 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 773 ms
[2024-12-02 16:38:36 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:38:37 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:38:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:38:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:38:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:38:37 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.644 seconds (process running for 1.972)
[2024-12-02 16:38:40 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:38:40 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:38:40 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@c448d62
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] [green.greengram.Feed.comment.model.FeedCommentDto@7ed371fb]
[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] []
[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] []
[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 1 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] []
[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] []
[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] []
[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:38:40 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] []
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@48834ab)
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@6f4a2961)
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@16ac6158)
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@99ecf18)
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@4c768fec)
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@72c9b622)
[2024-12-02 16:38:40 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@71abf82)
[2024-12-02 16:39:30 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:39:30 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:39:32 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6972 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:39:32 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:39:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:39:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:39:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:39:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:39:33 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:39:33 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:39:33 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:39:33 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 805 ms
[2024-12-02 16:39:33 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:39:33 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:39:34 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:39:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:39:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:39:34 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.684 seconds (process running for 2.02)
[2024-12-02 16:39:38 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 8172 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:39:38 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:39:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:39:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:39:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:39:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:39:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:39:39 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:39:39 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:39:39 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 791 ms
[2024-12-02 16:39:39 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:39:39 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:39:39 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:39:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:39:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:39:39 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.66 seconds (process running for 2.002)
[2024-12-02 16:39:43 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:39:43 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:39:43 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5792fc91
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@39a5e38f]
[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 1 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:39:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@3a33a8bb)
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@55588024)
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@25988cd1)
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@23cd3ce5)
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@49c2e57)
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@1554c740)
[2024-12-02 16:39:43 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@744b3f3f)
[2024-12-02 16:41:01 INFO http-nio-8080-exec-6] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:41:27 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:41:27 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'HANM' is not supported]
[2024-12-02 16:41:27 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:41:28 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:41:56 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:41:56 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:42:45 INFO http-nio-8080-exec-9] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:43:05 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:43:05 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:43:07 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3988 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:43:07 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:43:07 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:43:07 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:43:08 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:43:08 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:43:08 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:43:08 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:43:08 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:43:08 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 802 ms
[2024-12-02 16:43:08 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:43:08 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:43:08 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:43:08 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:43:08 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:43:08 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.668 seconds (process running for 2.024)
[2024-12-02 16:43:11 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:43:11 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:43:11 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2c1cf176
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@549707cd]
[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:43:12 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@26492dac)
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@2eb45829)
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@3348cc80)
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@67668266)
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@82df76b)
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@4548357)
[2024-12-02 16:43:12 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@710d7391)
[2024-12-02 16:43:47 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:44:02 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:44:10 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:44:11 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'OCQB' is not supported]
[2024-12-02 16:44:11 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:44:11 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:45:58 INFO http-nio-8080-exec-5] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:46:21 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:46:26 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:46:27 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:46:31 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:46:32 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'AAGT' is not supported]
[2024-12-02 16:46:32 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:47:52 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:47:52 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:47:55 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5924 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:47:55 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:47:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:47:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:47:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:47:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:47:56 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:47:56 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:47:56 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:47:56 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 848 ms
[2024-12-02 16:47:56 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:47:56 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:47:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:47:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:47:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:47:57 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.803 seconds (process running for 2.52)
[2024-12-02 16:48:00 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:48:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:48:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 16:48:00 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:48:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:48:00 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:48:55 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@780a0af
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 16 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@573cbd3e]
[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:48:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:48:56 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:49:59 WARN HikariPool-1 housekeeper] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m2s898ms365µs700ns).
[2024-12-02 16:49:59 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@6253edaa)
[2024-12-02 16:49:59 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@1e587918)
[2024-12-02 16:49:59 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@369eac52)
[2024-12-02 16:49:59 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@4c55a30c)
[2024-12-02 16:49:59 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@31163991)
[2024-12-02 16:49:59 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@6cdb0612)
[2024-12-02 16:49:59 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@2f64dbe7)
[2024-12-02 16:49:59 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:49:59 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:50:39 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6892 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:50:39 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:50:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:50:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:50:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:50:40 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:50:40 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:50:40 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:50:40 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:50:40 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 791 ms
[2024-12-02 16:50:40 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:50:40 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:50:40 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:50:40 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:50:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:50:40 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.681 seconds (process running for 2.044)
[2024-12-02 16:50:45 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:50:45 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:50:45 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2c1cf176
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@549707cd]
[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:50:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@26492dac)
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@2eb45829)
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@3348cc80)
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@67668266)
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@82df76b)
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@4548357)
[2024-12-02 16:50:45 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@710d7391)
[2024-12-02 16:51:25 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:51:25 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:51:36 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 8936 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:51:36 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:51:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:51:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:51:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:51:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:51:37 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:51:37 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:51:37 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:51:37 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 854 ms
[2024-12-02 16:51:37 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:51:37 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:51:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:51:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:51:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:51:38 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.814 seconds (process running for 2.224)
[2024-12-02 16:51:41 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:51:41 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:51:41 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@24a56251
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@af19ff4]
[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@9d83137)
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@1428fe79)
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@53c8e042)
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@4f825de3)
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@71b9cad)
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@54137101)
[2024-12-02 16:51:42 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@40cd5131)
[2024-12-02 16:52:02 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:52:02 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:53:04 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2924 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:53:04 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:53:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:53:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:53:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:53:05 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:53:05 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:53:05 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:53:05 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:53:05 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 841 ms
[2024-12-02 16:53:05 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:53:05 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:53:06 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:53:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:53:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:53:06 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.727 seconds (process running for 2.07)
[2024-12-02 16:53:07 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:53:07 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:53:07 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6e06d0c1
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@3cff5f8a]
[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 1 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:53:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@22e9c52)
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@7943c0fb)
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@f169445)
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@22827194)
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@5438a59a)
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@331be3fe)
[2024-12-02 16:53:07 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@894fd64)
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@3c7e19db]
[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 1 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:53:09 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@64d001a0)
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@7e94ff2c)
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@5f2eb40a)
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@1bfd5e91)
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@7fc4914f)
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@26f06c04)
[2024-12-02 16:53:09 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@cd40234)
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@1be299db]
[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 16:53:14 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.`comment`,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@2d1641a1)
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@7806d166)
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@66d82ebb)
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@4e58cfbf)
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@515c949c)
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@1f9ff230)
[2024-12-02 16:53:14 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@3815aa8e)
[2024-12-02 16:54:36 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:54:36 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:54:37 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1504 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:54:37 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:54:37 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:54:37 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:54:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:54:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:54:38 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:54:38 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:54:38 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:54:38 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 789 ms
[2024-12-02 16:54:38 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:54:39 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:54:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:54:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:54:39 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.677 seconds (process running for 2.06)
[2024-12-02 16:54:43 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:54:43 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:54:43 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:55:11 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1688 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:55:11 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:55:11 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:55:11 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:55:11 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:55:11 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:55:11 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:55:11 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:55:12 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:55:12 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 781 ms
[2024-12-02 16:55:12 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:55:12 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:55:12 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:55:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:55:12 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.667 seconds (process running for 2.007)
[2024-12-02 16:55:14 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:55:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:55:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 16:56:25 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5220 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:56:25 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:56:25 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:56:25 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:56:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:56:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:56:26 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:56:26 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:56:26 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:56:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 786 ms
[2024-12-02 16:56:26 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:56:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:56:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:56:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:56:26 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.671 seconds (process running for 2.02)
[2024-12-02 16:56:29 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:56:29 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:56:29 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:56:56 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 8696 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:56:56 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:56:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:56:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:56:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:56:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:56:57 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:56:57 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:56:57 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:56:57 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 863 ms
[2024-12-02 16:56:57 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:56:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:56:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:56:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:56:57 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.743 seconds (process running for 2.098)
[2024-12-02 16:56:58 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:56:58 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:56:58 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:57:49 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4100 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:57:49 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:57:49 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:57:49 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:57:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:57:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:57:50 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:57:50 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:57:50 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:57:50 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 794 ms
[2024-12-02 16:57:50 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:57:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:57:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:57:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:57:50 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.661 seconds (process running for 2.068)
[2024-12-02 16:57:52 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:57:52 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:57:52 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 16:59:42 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 8972 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 16:59:42 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:59:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:59:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:59:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:59:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:59:43 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:59:43 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:59:43 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:59:43 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 795 ms
[2024-12-02 16:59:43 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 16:59:43 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:59:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:59:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:59:43 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.698 seconds (process running for 2.072)
[2024-12-02 16:59:44 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:59:44 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:59:44 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 17:00:48 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 8284 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 17:00:48 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:00:48 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:00:48 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:00:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:00:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:00:49 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:00:49 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:00:49 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:00:49 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 777 ms
[2024-12-02 17:00:49 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 17:00:49 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:00:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:00:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:00:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:00:50 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.637 seconds (process running for 1.991)
[2024-12-02 17:00:58 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:00:58 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:00:58 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7ed90122
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@4553abb]
[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 1 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 1 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:00:58 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@4761369c)
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@21850ff8)
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@3a47561a)
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@9c944cd)
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@475246be)
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@4ea17b63)
[2024-12-02 17:00:58 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@4ed6032b)
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@11de2056]
[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 1 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:01:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@986e936)
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@60044053)
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@648a4cc1)
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@7b1b3fd9)
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@456ab6d5)
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@72e60f3)
[2024-12-02 17:01:03 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@31f4c893)
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@18a05d30]
[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 1 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:01:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@13eb22d)
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@18d4397d)
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@58de84f5)
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@5f7e6cb1)
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@2ba512a9)
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@1203d971)
[2024-12-02 17:01:23 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@3e561ee8)
[2024-12-02 17:02:35 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:02:35 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:02:38 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3940 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 17:02:38 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:02:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:02:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:02:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:02:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:02:38 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:02:38 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:02:38 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:02:38 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 822 ms
[2024-12-02 17:02:38 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 17:02:39 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:02:39 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:02:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:02:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:02:39 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.742 seconds (process running for 2.083)
[2024-12-02 17:02:39 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:02:39 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:02:39 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4951d8f8
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@7f64536e]
[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:02:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@7fc43aca)
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@50c1fcf0)
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@412ee90c)
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@6372ddf5)
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@3dbea93b)
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@6247e400)
[2024-12-02 17:02:41 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@549707cd)
[2024-12-02 17:02:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:02:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:02:56 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10900 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 17:02:56 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:02:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:02:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:02:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:02:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:02:57 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:02:57 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:02:57 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:02:57 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 837 ms
[2024-12-02 17:02:57 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 17:02:57 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:02:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:02:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:02:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:02:57 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.755 seconds (process running for 2.111)
[2024-12-02 17:02:57 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:02:57 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:02:57 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@41c39872
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@2cff90c1]
[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:03:00 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@5f58be72)
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@763117ae)
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@4d44da8f)
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@3efd62c4)
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@24ccf047)
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@5a3e1f17)
[2024-12-02 17:03:00 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@31c5267d)
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@7e20ba7]
[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:04:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@55930822)
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@324e110b)
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@bb4ca)
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@55f9bc2e)
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@18e66cab)
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@5ae2e0f5)
[2024-12-02 17:04:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comments=green.greengram.Feed.comment.model.FeedCommentGetRes@792b287)
[2024-12-02 17:08:38 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:08:38 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:08:50 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2356 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 17:08:50 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:08:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:08:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:08:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:08:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:08:51 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:08:51 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:08:51 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:08:51 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 824 ms
[2024-12-02 17:08:51 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 17:08:51 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:08:51 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:08:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:08:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:08:51 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.737 seconds (process running for 2.09)
[2024-12-02 17:08:52 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:08:52 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:08:52 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2c2f5495
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@2eff749e]
[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:08:54 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@38959c94)
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@742655)
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3f4aad1a)
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3c6bb17a)
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@288eeb5f)
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@9692695)
[2024-12-02 17:08:54 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@63a168df)
[2024-12-02 17:10:41 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        ( feed_id, user_id, comment)
        values
        ( 24, 2, 'd' )
 {executed in 2 msec}
[2024-12-02 17:10:41 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        ( feed_id, user_id, comment)
        values
        ( 24, 2, 'd' )
 {executed in 0 msec}
[2024-12-02 17:10:41 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|2         |
|----------|

[2024-12-02 17:10:45 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
[2024-12-02 17:10:55 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 11 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|2               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@6342654c, green.greengram.Feed.comment.model.FeedCommentDto@7e20ba7]
[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:11:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@55930822)
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@324e110b)
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@bb4ca)
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@55f9bc2e)
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@18e66cab)
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5ae2e0f5)
[2024-12-02 17:11:01 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@792b287)
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|2               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@734a8d91, green.greengram.Feed.comment.model.FeedCommentDto@17a736b2]
[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:11:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@8d51e1a)
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5b14dba5)
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3df2c4f9)
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@21eb500)
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@221b4e97)
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5faf6082)
[2024-12-02 17:11:30 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@74d1a282)
[2024-12-02 17:11:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed
            set writer_user_id = 2
                , contents = 'dd'
                , location = 'ddd'
 {executed in 2 msec}
[2024-12-02 17:11:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed
            set writer_user_id = 2
                , contents = 'dd'
                , location = 'ddd'
 {executed in 0 msec}
[2024-12-02 17:11:38 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|25        |
|----------|

[2024-12-02 17:11:38 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_pics
        ( feed_id, pic)
        values
         (  
            25, 'e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg'
         )
 {executed in 4 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|25      |dd           |ddd      |2024-12-02 17:11:38 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg |
|-----------------------------------------|

[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 16 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|2               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@5c4db78b, green.greengram.Feed.comment.model.FeedCommentDto@2ae0f4f4]
[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:11:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=25, contents=dd, location=ddd, createdAt=2024-12-02 17:11:38, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@65a5b4aa)
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@29e205d)
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@43423e3c)
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@251d841b)
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6dd574f6)
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1eba2dd9)
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4c5b53ec)
[2024-12-02 17:11:41 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@52f2b20)
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|25      |dd           |ddd      |2024-12-02 17:11:38 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg |
|-----------------------------------------|

[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|2               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@4ebf4c2e, green.greengram.Feed.comment.model.FeedCommentDto@2525aea8]
[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 8 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:23:39 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=25, contents=dd, location=ddd, createdAt=2024-12-02 17:11:38, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@25645023)
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@569e4bf3)
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2cae8a80)
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1f80b36d)
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@18621df6)
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3c070cda)
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@64a56b50)
[2024-12-02 17:23:39 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7ea4b772)
[2024-12-02 17:23:52 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed
            set writer_user_id = 2
                , contents = 'd'
                , location = 'd'
 {executed in 0 msec}
[2024-12-02 17:23:52 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed
            set writer_user_id = 2
                , contents = 'd'
                , location = 'd'
 {executed in 0 msec}
[2024-12-02 17:23:52 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|26        |
|----------|

[2024-12-02 17:23:52 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_pics
        ( feed_id, pic)
        values
         (  
            26, 'e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp'
         )
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|26      |d            |d        |2024-12-02 17:23:52 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|25      |dd           |ddd      |2024-12-02 17:11:38 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp |
|------------------------------------------|

[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg |
|-----------------------------------------|

[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|2               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@2071a6bd, green.greengram.Feed.comment.model.FeedCommentDto@4f55adb1]
[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:23:55 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=26, contents=d, location=d, createdAt=2024-12-02 17:23:52, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@71d3974)
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=25, contents=dd, location=ddd, createdAt=2024-12-02 17:11:38, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@29921042)
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3d6e57ef)
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@61136acc)
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@fab3903)
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@368238b4)
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@799cd0a4)
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3a39051)
[2024-12-02 17:23:55 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5516d207)
[2024-12-02 17:23:58 INFO http-nio-8080-exec-7] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@2878532a
[2024-12-02 17:23:58 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed_like
        where user_id =2
        and feed_id =26
 {executed in 0 msec}
[2024-12-02 17:23:58 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set
        feed_id =26
        , user_id =2
 {executed in 0 msec}
[2024-12-02 17:24:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        ( feed_id, user_id, comment)
        values
        ( 26, 2, 'd' )
 {executed in 0 msec}
[2024-12-02 17:24:00 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        ( feed_id, user_id, comment)
        values
        ( 26, 2, 'd' )
 {executed in 0 msec}
[2024-12-02 17:24:00 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|3         |
|----------|

[2024-12-02 17:24:02 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|26      |d            |d        |2024-12-02 17:23:52 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |1      |
|25      |dd           |ddd      |2024-12-02 17:11:38 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp |
|------------------------------------------|

[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|3               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@5922d5d]
[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg |
|-----------------------------------------|

[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|2               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@13f283e5, green.greengram.Feed.comment.model.FeedCommentDto@37982721]
[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:24:07 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=26, contents=d, location=d, createdAt=2024-12-02 17:23:52, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=1, pics=[e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@61285b59)
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=25, contents=dd, location=ddd, createdAt=2024-12-02 17:11:38, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6bcaa178)
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@684b00c0)
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2d1da00a)
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@e4cd463)
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@30b375b3)
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@ce3e65)
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4093d386)
[2024-12-02 17:24:07 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2814f83b)
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 2
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2)
[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 2
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|26      |d            |d        |2024-12-02 17:23:52 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |1      |
|25      |dd           |ddd      |2024-12-02 17:11:38 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp |
|------------------------------------------|

[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|3               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@5f0cb29c]
[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg |
|-----------------------------------------|

[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|2               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@1a966472, green.greengram.Feed.comment.model.FeedCommentDto@20269750]
[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:25:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=26, contents=d, location=d, createdAt=2024-12-02 17:23:52, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=1, pics=[e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@c296a54)
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=25, contents=dd, location=ddd, createdAt=2024-12-02 17:11:38, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2f8c1e2c)
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4ee1070e)
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@318fa975)
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@76b31eda)
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3901135e)
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7f9eaa07)
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@33167080)
[2024-12-02 17:25:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5dbdedf6)
[2024-12-02 17:25:26 INFO http-nio-8080-exec-10] [green.greengram.user.UserService] hashedPassword: $2a$10$JfnL.7jpW1LEri/BkAuA/O/HgSmmqz90i7R6hQd7wl91g/dWU9tRG
[2024-12-02 17:25:26 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into user
        set uid = 'awd'
          , upw = '$2a$10$JfnL.7jpW1LEri/BkAuA/O/HgSmmqz90i7R6hQd7wl91g/dWU9tRG'
          , nick_name = '김두한'
          , pic = NULL
 {executed in 0 msec}
[2024-12-02 17:25:26 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into user
        set uid = 'awd'
          , upw = '$2a$10$JfnL.7jpW1LEri/BkAuA/O/HgSmmqz90i7R6hQd7wl91g/dWU9tRG'
          , nick_name = '김두한'
          , pic = NULL
 {executed in 0 msec}
[2024-12-02 17:25:26 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|3         |
|----------|

[2024-12-02 17:25:31 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
[2024-12-02 17:25:31 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , if null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user
        WHERE uid = 'awb'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=215) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:25:31 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=215) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
### The error may exist in file [D:\RYU\GreenGramVer2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT user_id AS userId         , if null(nick_name,uid) AS nickName         , pic         , upw         FROM user         WHERE uid = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=215) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=215) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:26:41 INFO http-nio-8080-exec-8] [green.greengram.user.UserService] hashedPassword: $2a$10$JB26c/KNrcZKjGPcqJsBYe1JByjD7H3T2mduJdbbWTdW1wjI8a.ea
[2024-12-02 17:26:41 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into user
        set uid = '1'
          , upw = '$2a$10$JB26c/KNrcZKjGPcqJsBYe1JByjD7H3T2mduJdbbWTdW1wjI8a.ea'
          , nick_name = '1'
          , pic = NULL
 {executed in 7 msec}
[2024-12-02 17:26:41 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into user
        set uid = '1'
          , upw = '$2a$10$JB26c/KNrcZKjGPcqJsBYe1JByjD7H3T2mduJdbbWTdW1wjI8a.ea'
          , nick_name = '1'
          , pic = NULL
 {executed in 0 msec}
[2024-12-02 17:26:41 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|4         |
|----------|

[2024-12-02 17:26:46 WARN http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
[2024-12-02 17:26:46 ERRORhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , if null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user
        WHERE uid = '1'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=215) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:26:46 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=215) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
### The error may exist in file [D:\RYU\GreenGramVer2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT user_id AS userId         , if null(nick_name,uid) AS nickName         , pic         , upw         FROM user         WHERE uid = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=215) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=215) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:26:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:26:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:27:03 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 960 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 17:27:03 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:27:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:27:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:27:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:27:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:27:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:27:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:27:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:27:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 778 ms
[2024-12-02 17:27:04 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 17:27:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:27:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:27:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:27:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:27:04 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.642 seconds (process running for 1.99)
[2024-12-02 17:27:10 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:27:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:27:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 17:27:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:27:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6ab8d432
[2024-12-02 17:27:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:27:10 WARN http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
[2024-12-02 17:27:10 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
[2024-12-02 17:27:10 ERRORhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT user_id AS userId
        , if null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user
        WHERE uid = 'awb'
 {FAILED after 2 msec}
java.sql.SQLSyntaxErrorException: (conn=226) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:27:10 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , if null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user
        WHERE uid = 'awb'
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:27:10 WARN http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
[2024-12-02 17:27:10 ERRORhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , if null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user
        WHERE uid = 'awb'
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:27:11 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
### The error may exist in file [D:\RYU\GreenGramVer2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT user_id AS userId         , if null(nick_name,uid) AS nickName         , pic         , upw         FROM user         WHERE uid = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:27:11 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
### The error may exist in file [D:\RYU\GreenGramVer2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT user_id AS userId         , if null(nick_name,uid) AS nickName         , pic         , upw         FROM user         WHERE uid = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:27:11 ERRORhttp-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=226) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
### The error may exist in file [D:\RYU\GreenGramVer2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT user_id AS userId         , if null(nick_name,uid) AS nickName         , pic         , upw         FROM user         WHERE uid = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=226) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=226) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:27:43 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
[2024-12-02 17:27:43 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , if null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user
        WHERE uid = 'awb'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:27:43 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
### The error may exist in file [D:\RYU\GreenGramVer2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT user_id AS userId         , if null(nick_name,uid) AS nickName         , pic         , upw         FROM user         WHERE uid = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:28:20 INFO http-nio-8080-exec-5] [green.greengram.user.UserService] hashedPassword: $2a$10$Pk.t8DkzFxCQ.rvRKvMo6udzVJii92WefCdcC72q/uCylNKIemIPW
[2024-12-02 17:28:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into user
        set uid = 'ksj'
          , upw = '$2a$10$Pk.t8DkzFxCQ.rvRKvMo6udzVJii92WefCdcC72q/uCylNKIemIPW'
          , nick_name = NULL
          , pic = '9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg'
 {executed in 0 msec}
[2024-12-02 17:28:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into user
        set uid = 'ksj'
          , upw = '$2a$10$Pk.t8DkzFxCQ.rvRKvMo6udzVJii92WefCdcC72q/uCylNKIemIPW'
          , nick_name = NULL
          , pic = '9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg'
 {executed in 0 msec}
[2024-12-02 17:28:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|5         |
|----------|

[2024-12-02 17:28:25 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
[2024-12-02 17:28:25 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , if null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user
        WHERE uid = 'ksj'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:28:25 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
### The error may exist in file [D:\RYU\GreenGramVer2\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT user_id AS userId         , if null(nick_name,uid) AS nickName         , pic         , upw         FROM user         WHERE uid = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=225) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'null(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user...' at line 2
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy87.selUserForSignIn(Unknown Source)
	at green.greengram.user.UserService.postSignIn(UserService.java:54)
	at green.greengram.user.UserController.signIn(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 17:28:38 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:28:38 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:28:39 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1896 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 17:28:39 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:28:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:28:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:28:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:28:40 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:28:40 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:28:40 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:28:40 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:28:40 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 818 ms
[2024-12-02 17:28:40 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 17:28:40 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:28:41 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:28:41 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:28:41 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:28:41 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.782 seconds (process running for 2.13)
[2024-12-02 17:28:42 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 17:28:42 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 17:28:42 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 17:28:42 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 17:28:42 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6fc04f5b
[2024-12-02 17:28:42 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 17:28:42 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , ifnull(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user
        WHERE uid = 'awb'
 {executed in 1 msec}
[2024-12-02 17:28:42 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|----|----|
|user_id |nickname |pic |upw |
|--------|---------|----|----|
|--------|---------|----|----|

[2024-12-02 17:28:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , ifnull(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user
        WHERE uid = 'awb'
 {executed in 0 msec}
[2024-12-02 17:28:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|----|----|
|user_id |nickname |pic |upw |
|--------|---------|----|----|
|--------|---------|----|----|

[2024-12-02 17:28:58 INFO http-nio-8080-exec-2] [green.greengram.user.UserService] hashedPassword: $2a$10$J.E/ybkJZeFT0BA3AwIH4.d4KzUhRF//dwatHXuuQs95Sy1a8tk8C
[2024-12-02 17:28:58 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into user
        set uid = 'abc'
          , upw = '$2a$10$J.E/ybkJZeFT0BA3AwIH4.d4KzUhRF//dwatHXuuQs95Sy1a8tk8C'
          , nick_name = '길동'
          , pic = NULL
 {executed in 3 msec}
[2024-12-02 17:28:58 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into user
        set uid = 'abc'
          , upw = '$2a$10$J.E/ybkJZeFT0BA3AwIH4.d4KzUhRF//dwatHXuuQs95Sy1a8tk8C'
          , nick_name = '길동'
          , pic = NULL
 {executed in 0 msec}
[2024-12-02 17:28:58 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|6         |
|----------|

[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , ifnull(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user
        WHERE uid = 'abc'
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|----|-------------------------------------------------------------|
|user_id |nickname |pic |upw                                                          |
|--------|---------|----|-------------------------------------------------------------|
|6       |길동       |null|$2a$10$J.E/ybkJZeFT0BA3AwIH4.d4KzUhRF//dwatHXuuQs95Sy1a8tk8C |
|--------|---------|----|-------------------------------------------------------------|

[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 6
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6)
[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 6
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|26      |d            |d        |2024-12-02 17:23:52 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|25      |dd           |ddd      |2024-12-02 17:11:38 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp |
|------------------------------------------|

[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|---------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment        |user_id |writernm |pic                                      |
|----------------|---------------|--------|---------|-----------------------------------------|
|4               |죽어야 끝난다 이 모든 건 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |
|3               |d              |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|---------------|--------|---------|-----------------------------------------|

[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@4515ebf1, green.greengram.Feed.comment.model.FeedCommentDto@2b74c535]
[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg |
|-----------------------------------------|

[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 1 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|2               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@6e18668e, green.greengram.Feed.comment.model.FeedCommentDto@6bf86f02]
[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:29:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=26, contents=d, location=d, createdAt=2024-12-02 17:23:52, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7b20f063)
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=25, contents=dd, location=ddd, createdAt=2024-12-02 17:11:38, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@b156729)
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@8a2a530)
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2a666fe8)
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@56b9312f)
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@763528fe)
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6ba3882d)
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7223b39e)
[2024-12-02 17:29:03 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6d0cd4bc)
[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , ifnull(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user
        WHERE uid = 'ksj'
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|user_id |nickname |pic                                      |upw                                                          |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|
|5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |$2a$10$Pk.t8DkzFxCQ.rvRKvMo6udzVJii92WefCdcC72q/uCylNKIemIPW |
|--------|---------|-----------------------------------------|-------------------------------------------------------------|

[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 5
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=5)
[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 5
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|26      |d            |d        |2024-12-02 17:23:52 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|25      |dd           |ddd      |2024-12-02 17:11:38 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp |
|------------------------------------------|

[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|---------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment        |user_id |writernm |pic                                      |
|----------------|---------------|--------|---------|-----------------------------------------|
|4               |죽어야 끝난다 이 모든 건 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |
|3               |d              |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|---------------|--------|---------|-----------------------------------------|

[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@7becd5a4, green.greengram.Feed.comment.model.FeedCommentDto@a63d2d2]
[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 25
 {executed in 1 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg |
|-----------------------------------------|

[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|2               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@7743eb49, green.greengram.Feed.comment.model.FeedCommentDto@50bc7ba4]
[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:29:06 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=26, contents=d, location=d, createdAt=2024-12-02 17:23:52, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1486ea43)
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=25, contents=dd, location=ddd, createdAt=2024-12-02 17:11:38, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4547db89)
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@60dc3e76)
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6e66e55)
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@25115838)
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5e714480)
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5fdfeeb6)
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6afea7de)
[2024-12-02 17:29:06 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4501e221)
[2024-12-02 17:29:21 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comments
        ( feed_id, user_id, comment)
        values
        ( 25, 5, '이상한거좀 그만올려라' )
 {executed in 2 msec}
[2024-12-02 17:29:21 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comments
        ( feed_id, user_id, comment)
        values
        ( 25, 5, '이상한거좀 그만올려라' )
 {executed in 0 msec}
[2024-12-02 17:29:21 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|5         |
|----------|

[2024-12-02 17:29:22 INFO http-nio-8080-exec-6] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@740bd33d
[2024-12-02 17:29:22 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed_like
        where user_id =5
        and feed_id =25
 {executed in 0 msec}
[2024-12-02 17:29:22 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set
        feed_id =25
        , user_id =5
 {executed in 2 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 5
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=5)
[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 5
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|26      |d            |d        |2024-12-02 17:23:52 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|25      |dd           |ddd      |2024-12-02 17:11:38 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 26
 {executed in 1 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp |
|------------------------------------------|

[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|---------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment        |user_id |writernm |pic                                      |
|----------------|---------------|--------|---------|-----------------------------------------|
|4               |죽어야 끝난다 이 모든 건 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |
|3               |d              |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|---------------|--------|---------|-----------------------------------------|

[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@121cf618, green.greengram.Feed.comment.model.FeedCommentDto@11000f9b]
[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg |
|-----------------------------------------|

[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|5               |이상한거좀 그만올려라 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@48b7ac5b]
[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|2               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@538d5822, green.greengram.Feed.comment.model.FeedCommentDto@120b66d6]
[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 1 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 1 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|---------|--------|---------|----|
|feed_comment_id |comment  |user_id |writernm |pic |
|----------------|---------|--------|---------|----|
|6               |뿌잉뿌아앙 >< |6       |길동       |null|
|----------------|---------|--------|---------|----|

[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@2e1b8b8b]
[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:30:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=26, contents=d, location=d, createdAt=2024-12-02 17:23:52, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@64b54ee7)
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=25, contents=dd, location=ddd, createdAt=2024-12-02 17:11:38, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=1, pics=[e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@476774f1)
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3c051bcb)
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2286c6ca)
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6c0a760b)
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@10b64787)
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@479dd19)
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@10ddfbca)
[2024-12-02 17:30:03 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2f586df4)
[2024-12-02 17:30:17 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-02 17:30:20 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed
            set writer_user_id = 5
                , contents = '치킨어택'
                , location = 'ㅇㅇ'
 {executed in 0 msec}
[2024-12-02 17:30:20 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed
            set writer_user_id = 5
                , contents = '치킨어택'
                , location = 'ㅇㅇ'
 {executed in 0 msec}
[2024-12-02 17:30:20 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|27        |
|----------|

[2024-12-02 17:30:20 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_pics
        ( feed_id, pic)
        values
         (  
            27, 'af2e1a61-87c4-4c1a-b795-a5fb85548416.gif'
         )
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 5
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=5)
[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 5
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|26      |d            |d        |2024-12-02 17:23:52 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|25      |dd           |ddd      |2024-12-02 17:11:38 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|af2e1a61-87c4-4c1a-b795-a5fb85548416.gif |
|-----------------------------------------|

[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 26
 {executed in 16 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp |
|------------------------------------------|

[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|---------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment        |user_id |writernm |pic                                      |
|----------------|---------------|--------|---------|-----------------------------------------|
|4               |죽어야 끝난다 이 모든 건 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |
|3               |d              |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|---------------|--------|---------|-----------------------------------------|

[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@1c8c5a00, green.greengram.Feed.comment.model.FeedCommentDto@1a140cf2]
[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg |
|-----------------------------------------|

[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|5               |이상한거좀 그만올려라 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@439c13d7]
[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|2               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@76ef882b, green.greengram.Feed.comment.model.FeedCommentDto@77889459]
[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|---------|--------|---------|----|
|feed_comment_id |comment  |user_id |writernm |pic |
|----------------|---------|--------|---------|----|
|6               |뿌잉뿌아앙 >< |6       |길동       |null|
|----------------|---------|--------|---------|----|

[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@12490047]
[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 17:30:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[af2e1a61-87c4-4c1a-b795-a5fb85548416.gif], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@986104f)
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=26, contents=d, location=d, createdAt=2024-12-02 17:23:52, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3546c651)
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=25, contents=dd, location=ddd, createdAt=2024-12-02 17:11:38, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=1, pics=[e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@66389153)
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@128c251c)
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2b315b6a)
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@28c66413)
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@ad6ca51)
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7981aad2)
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@58ca5483)
[2024-12-02 17:30:28 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@43b74575)
[2024-12-02 17:47:07 INFO SpringApplicationShutdownHook] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:47:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:47:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 17:54:27 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10528 (D:\RYU\GreenGramVer2\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer2)
[2024-12-02 17:54:27 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 17:54:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 17:54:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 17:54:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 17:54:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:54:28 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 17:54:28 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 17:54:28 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 17:54:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 785 ms
[2024-12-02 17:54:28 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver2
[2024-12-02 17:54:28 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 17:54:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 17:54:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 17:54:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 17:54:28 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer2Application in 1.639 seconds (process running for 1.982)
[2024-12-02 18:01:30 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 18:01:30 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 18:01:30 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 6
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6)
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2ccb23bd
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 6
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|26      |d            |d        |2024-12-02 17:23:52 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|25      |dd           |ddd      |2024-12-02 17:11:38 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|23      |awdawd       |sdad     |2024-11-29 16:01:09 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|22      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 15:58:43 |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |0      |
|16      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:23:16 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|15      |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 14:22:58 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|9       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-29 10:38:40 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|5       |ㅇㅇㅇ          |ㅠㅠㅠ      |2024-11-28 17:34:44 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 27
 {executed in 0 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|af2e1a61-87c4-4c1a-b795-a5fb85548416.gif |
|-----------------------------------------|

[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 26
 {executed in 0 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp |
|------------------------------------------|

[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=26
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 16 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|---------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment        |user_id |writernm |pic                                      |
|----------------|---------------|--------|---------|-----------------------------------------|
|4               |죽어야 끝난다 이 모든 건 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |
|3               |d              |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|---------------|--------|---------|-----------------------------------------|

[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@69a2eea5, green.greengram.Feed.comment.model.FeedCommentDto@19bad0c3]
[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 25
 {executed in 0 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg |
|-----------------------------------------|

[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=25
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|------------|--------|---------|-----------------------------------------|
|feed_comment_id |comment     |user_id |writernm |pic                                      |
|----------------|------------|--------|---------|-----------------------------------------|
|5               |이상한거좀 그만올려라 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |
|----------------|------------|--------|---------|-----------------------------------------|

[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@57752947]
[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 24
 {executed in 0 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg |
|-----------------------------------------|

[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|10              |ㅋㅋ ㅗㅗ   |3       |김두한      |null                                     |
|2               |d       |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|1               |안녕      |2       |ddd      |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@de4ade9, green.greengram.Feed.comment.model.FeedCommentDto@7f3fa94e, green.greengram.Feed.comment.model.FeedCommentDto@c6455eb]
[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 23
 {executed in 6 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|847affe6-aa9f-408a-9a48-64ee8a00d718.jpg |
|-----------------------------------------|

[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=23
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 22
 {executed in 1 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg |
|-----------------------------------------|

[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=22
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 16
 {executed in 1 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg |
|-----------------------------------------|

[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=16
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|---------|--------|---------|----|
|feed_comment_id |comment  |user_id |writernm |pic |
|----------------|---------|--------|---------|----|
|6               |뿌잉뿌아앙 >< |6       |길동       |null|
|----------------|---------|--------|---------|----|

[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = [green.greengram.Feed.comment.model.FeedCommentDto@4c1dad11]
[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 15
 {executed in 0 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b112fb25-20ed-4e17-9035-1b157794e98f.jpg |
|-----------------------------------------|

[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=15
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 9
 {executed in 1 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|91762854-d72a-4347-8304-937796019204.jpg |
|a31ec7b6-ac29-495a-8185-610290dcb426.gif |
|a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg |
|-----------------------------------------|

[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=9
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pics
        where feed_id = 5
 {executed in 0 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-02 18:01:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comments C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=5
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedService] commentListTest = []
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[af2e1a61-87c4-4c1a-b795-a5fb85548416.gif], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3aeb0ffd)
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=26, contents=d, location=d, createdAt=2024-12-02 17:23:52, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e1d1dec3-4a7c-42cd-919c-3745cc05d5d7.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@b64c2e6)
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=25, contents=dd, location=ddd, createdAt=2024-12-02 17:11:38, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[e818ef41-20da-422b-a6e5-3c97eabf0e9d.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3af3c560)
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[21617ae1-7278-4fc2-9bbf-e7629b85b79a.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3d9bf7dc)
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=23, contents=awdawd, location=sdad, createdAt=2024-11-29 16:01:09, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[847affe6-aa9f-408a-9a48-64ee8a00d718.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5fed9375)
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=2, feedId=22, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 15:58:43, writerNm=ddd, writerPic=e061ad76-97d6-4cbf-82d7-48bd433899b2.png, isLike=0, pics=[5b08a29f-c459-4621-adb8-65a7c7d2cda4.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@72b3199c)
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=16, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:23:16, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[58d1d03f-e4b8-47dd-b57c-3f06d9fd2a19.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@56cf0a6f)
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=15, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 14:22:58, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[b112fb25-20ed-4e17-9035-1b157794e98f.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3488227d)
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=9, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-29 10:38:40, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[91762854-d72a-4347-8304-937796019204.jpg, a31ec7b6-ac29-495a-8185-610290dcb426.gif, a497b3d4-f5d5-4f39-963d-2815cd3d1944.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7cd79a2)
[2024-12-02 18:01:30 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=5, contents=ㅇㅇㅇ, location=ㅠㅠㅠ, createdAt=2024-11-28 17:34:44, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6d58ef3e)
[2024-12-02 18:01:35 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 18:01:35 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
