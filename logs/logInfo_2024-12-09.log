[2024-12-09 09:52:30 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 7956 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 09:52:30 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 09:52:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 09:52:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 09:52:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 09:52:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 09:52:31 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 09:52:31 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 09:52:31 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 09:52:31 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 936 ms
[2024-12-09 09:52:31 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 09:52:31 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 09:52:31 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 09:52:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 09:52:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 09:52:31 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.983 seconds (process running for 2.483)
[2024-12-09 09:52:42 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 09:52:42 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 09:52:42 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7)
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3e467d3e
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 1 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 1 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 09:52:42 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1b612fb8)
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1772fb77)
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4ab6715a)
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@45302749)
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@57beccb8)
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@57172c7b)
[2024-12-09 09:52:42 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2ed2bb62)
[2024-12-09 09:52:44 INFO http-nio-8080-exec-8] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@45901437
[2024-12-09 09:52:44 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed_like
        where user_id =7
        and feed_id =32
 {executed in 0 msec}
[2024-12-09 09:52:44 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set
        feed_id =32
        , user_id =7
 {executed in 2 msec}
[2024-12-09 09:52:45 INFO http-nio-8080-exec-9] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@7bc42cfb
[2024-12-09 09:52:45 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed_like
        where user_id =7
        and feed_id =31
 {executed in 0 msec}
[2024-12-09 09:52:45 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set
        feed_id =31
        , user_id =7
 {executed in 2 msec}
[2024-12-09 09:52:46 INFO http-nio-8080-exec-3] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@1da139d1
[2024-12-09 09:52:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed_like
        where user_id =7
        and feed_id =30
 {executed in 2 msec}
[2024-12-09 09:52:46 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set
        feed_id =30
        , user_id =7
 {executed in 2 msec}
[2024-12-09 09:52:48 INFO http-nio-8080-exec-2] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@4da9ce60
[2024-12-09 09:52:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed_like
        where user_id =7
        and feed_id =29
 {executed in 0 msec}
[2024-12-09 09:52:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set
        feed_id =29
        , user_id =7
 {executed in 3 msec}
[2024-12-09 09:52:49 INFO http-nio-8080-exec-1] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@534ec985
[2024-12-09 09:52:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed_like
        where user_id =7
        and feed_id =27
 {executed in 0 msec}
[2024-12-09 09:52:49 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set
        feed_id =27
        , user_id =7
 {executed in 1 msec}
[2024-12-09 09:52:49 INFO http-nio-8080-exec-10] [green.greengram.common.model.Paging] page = 2, size = 20
[2024-12-09 09:52:49 INFO http-nio-8080-exec-10] [green.greengram.Feed.model.FeedGetReq] page: 2, size: null, userId: 7
[2024-12-09 09:52:49 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=7)
[2024-12-09 09:52:49 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7
    ORDER BY A.feed_id DESC
    LIMIT 20, 20
 {executed in 1 msec}
[2024-12-09 09:52:49 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-09 09:52:50 INFO http-nio-8080-exec-4] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@7f1e36c0
[2024-12-09 09:52:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed_like
        where user_id =7
        and feed_id =24
 {executed in 0 msec}
[2024-12-09 09:52:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set
        feed_id =24
        , user_id =7
 {executed in 3 msec}
[2024-12-09 10:01:52 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-09 10:01:52 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:01:52 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 10:01:52 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 10:01:52 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 7956 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 10:01:52 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:01:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:01:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:01:52 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:01:52 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:01:52 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:01:52 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 218 ms
[2024-12-09 10:01:52 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 10:01:52 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:01:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:01:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:01:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:01:53 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.402 seconds (process running for 563.78)
[2024-12-09 10:01:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 10:03:58 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-09 10:03:58 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:03:58 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 7956 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 10:03:58 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:03:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:03:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:03:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:03:58 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:03:58 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:03:58 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 202 ms
[2024-12-09 10:03:58 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 10:03:58 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:03:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:03:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:03:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:03:58 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.404 seconds (process running for 689.248)
[2024-12-09 10:03:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 10:17:10 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 2 deletions, 0 modifications)
[2024-12-09 10:17:10 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:17:10 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 7956 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 10:17:10 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:17:11 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:17:11 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:17:11 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:17:11 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:17:11 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:17:11 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 298 ms
[2024-12-09 10:17:11 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 10:17:11 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:17:11 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:17:11 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:17:11 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:17:11 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.526 seconds (process running for 1481.963)
[2024-12-09 10:17:11 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 10:17:11 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 10:17:11 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 10:17:11 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 2 ms
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7)
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@54c75e
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |0      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
            from feed_pic
        where feed_id = 32
 {executed in 1 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:17:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1849ba2e)
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@704287c)
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@192e2dc4)
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@28a10147)
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7dec56b7)
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5b0dc6be)
[2024-12-09 10:17:11 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@33258016)
[2024-12-09 10:17:12 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 29 class path changes (2 additions, 0 deletions, 27 modifications)
[2024-12-09 10:17:12 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:17:12 INFO Thread-15] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-09 10:17:12 INFO Thread-15] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-09 10:17:12 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 7956 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 10:17:12 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:17:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:17:12 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:17:12 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:17:12 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:17:12 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:17:12 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 170 ms
[2024-12-09 10:17:12 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 10:17:12 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:17:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:17:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:17:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:17:13 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.317 seconds (process running for 1483.78)
[2024-12-09 10:17:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 10:17:14 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 10:17:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 10:17:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 10:17:14 INFO http-nio-8080-exec-1] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@2c4f552
[2024-12-09 10:17:14 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Starting...
[2024-12-09 10:17:14 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@b0c67f4
[2024-12-09 10:17:14 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Start completed.
[2024-12-09 10:17:14 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. delete from feed_like
        where user_id =7
        and feed_id =32
 {executed in 1 msec}
[2024-12-09 10:17:14 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. insert into feed_like
        set
        feed_id =32
        , user_id =7
 {executed in 1 msec}
[2024-12-09 10:17:16 INFO http-nio-8080-exec-4] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@72055957
[2024-12-09 10:17:16 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. delete from feed_like
        where user_id =7
        and feed_id =33
 {executed in 0 msec}
[2024-12-09 10:17:16 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. insert into feed_like
        set
        feed_id =33
        , user_id =7
 {executed in 2 msec}
[2024-12-09 10:17:18 INFO http-nio-8080-exec-3] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@341ab9dc
[2024-12-09 10:17:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. delete from feed_like
        where user_id =7
        and feed_id =31
 {executed in 0 msec}
[2024-12-09 10:17:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. insert into feed_like
        set
        feed_id =31
        , user_id =7
 {executed in 3 msec}
[2024-12-09 10:17:19 INFO http-nio-8080-exec-10] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@2683779
[2024-12-09 10:17:19 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. delete from feed_like
        where user_id =7
        and feed_id =30
 {executed in 1 msec}
[2024-12-09 10:17:19 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. insert into feed_like
        set
        feed_id =30
        , user_id =7
 {executed in 2 msec}
[2024-12-09 10:17:20 INFO http-nio-8080-exec-5] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@67ad7aa8
[2024-12-09 10:17:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. delete from feed_like
        where user_id =7
        and feed_id =29
 {executed in 0 msec}
[2024-12-09 10:17:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. insert into feed_like
        set
        feed_id =29
        , user_id =7
 {executed in 3 msec}
[2024-12-09 10:17:21 INFO http-nio-8080-exec-6] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@39ff63ea
[2024-12-09 10:17:21 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. delete from feed_like
        where user_id =7
        and feed_id =27
 {executed in 0 msec}
[2024-12-09 10:17:21 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. insert into feed_like
        set
        feed_id =27
        , user_id =7
 {executed in 1 msec}
[2024-12-09 10:17:22 INFO http-nio-8080-exec-7] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@6f3c7e2d
[2024-12-09 10:17:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. delete from feed_like
        where user_id =7
        and feed_id =24
 {executed in 0 msec}
[2024-12-09 10:17:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. insert into feed_like
        set
        feed_id =24
        , user_id =7
 {executed in 2 msec}
[2024-12-09 10:17:23 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 2, size = 20
[2024-12-09 10:17:23 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 2, size: null, userId: 7
[2024-12-09 10:17:23 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=7)
[2024-12-09 10:17:23 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7
    ORDER BY A.feed_id DESC
    LIMIT 20, 20
 {executed in 0 msec}
[2024-12-09 10:17:23 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7)
[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 31
 {executed in 1 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 30
 {executed in 1 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 29
 {executed in 1 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 27
 {executed in 1 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:17:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@41ad0f6e)
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4d1ebd3d)
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@59da5e1)
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4cdfe09c)
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@65204016)
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5defeeda)
[2024-12-09 10:17:27 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@35b5fa2b)
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7)
[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 32
 {executed in 1 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 10:17:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@75d9cdbb)
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1d409b79)
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@72749a83)
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@ee9ca77)
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@35e67a04)
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2ce4b492)
[2024-12-09 10:17:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7a12830f)
[2024-12-09 10:19:18 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)
[2024-12-09 10:19:18 INFO Thread-19] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:19:18 INFO Thread-19] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Shutdown initiated...
[2024-12-09 10:19:18 INFO Thread-19] [com.zaxxer.hikari.HikariDataSource] HikariPool-3 - Shutdown completed.
[2024-12-09 10:19:18 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 7956 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 10:19:18 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:19:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:19:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:19:19 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:19:19 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:19:19 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:19:19 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 184 ms
[2024-12-09 10:19:19 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 10:19:19 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:19:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:19:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:19:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:19:19 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.336 seconds (process running for 1610.024)
[2024-12-09 10:19:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 10:47:27 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 7416 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 10:47:27 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:47:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 10:47:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 10:47:27 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:47:27 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:47:27 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:47:27 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:47:27 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:47:27 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 894 ms
[2024-12-09 10:47:27 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 10:47:28 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:47:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:47:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:47:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:47:28 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.842 seconds (process running for 2.194)
[2024-12-09 10:47:30 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 10:47:30 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 10:47:30 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 10:47:30 INFO http-nio-8080-exec-3] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 218 ms
[2024-12-09 10:47:52 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 10:47:52 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4f7e1643
[2024-12-09 10:47:52 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 10:47:52 WARN http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1, 0))
            + SUM(DISTINCT if(C.to_user_id = 0 2, 0)) AS followState
 ...' at line 7
[2024-12-09 10:47:52 ERRORhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id, A.pic, A.created_at AS createdAt
            , IF(nick_name IS NULL, uid, nick_name) AS nickName
            , IFNULL(D.feedCnt, 0) AS feedCnt
            , IFNULL(D.likeCnt, 0) AS likeCnt
            , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
            , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
            , SUM(DISTINCT if(B.from_user_id = 0 1, 0))
            + SUM(DISTINCT if(C.to_user_id = 0 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
            SELECT H.writer_user_id
                , COUNT(DISTINCT H.feed_id) AS feedCnt
                , COUNT(I.user_id) AS likeCnt
            FROM feed H
            LEFT JOIN feed_like I
             ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 0
        ) D
            ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
            ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
            ON A.user_id = C.from_user_id
        WHERE A.user_id = 0
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=34) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1, 0))
            + SUM(DISTINCT if(C.to_user_id = 0 2, 0)) AS followState
 ...' at line 7
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy89.selUserInfo(Unknown Source)
	at green.greengram.user.UserService.getUserInfo(UserService.java:69)
	at green.greengram.user.UserController.getUserInfo(UserController.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 10:47:52 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=34) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1, 0))
            + SUM(DISTINCT if(C.to_user_id = 0 2, 0)) AS followState
 ...' at line 7
### The error may exist in file [D:\RYU\GreenGramVer3\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT A.user_id, A.pic, A.created_at AS createdAt             , IF(nick_name IS NULL, uid, nick_name) AS nickName             , IFNULL(D.feedCnt, 0) AS feedCnt             , IFNULL(D.likeCnt, 0) AS likeCnt             , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`             , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`             , SUM(DISTINCT if(B.from_user_id = ? 1, 0))             + SUM(DISTINCT if(C.to_user_id = ? 2, 0)) AS followState         FROM user A         LEFT JOIN (             SELECT H.writer_user_id                 , COUNT(DISTINCT H.feed_id) AS feedCnt                 , COUNT(I.user_id) AS likeCnt             FROM feed H             LEFT JOIN feed_like I              ON H.feed_id = I.feed_id         WHERE H.writer_user_id = ?         ) D             ON A.user_id = D.writer_user_id         LEFT JOIN user_follow B             ON A.user_id = B.to_user_id         LEFT JOIN user_follow C             ON A.user_id = C.from_user_id         WHERE A.user_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=34) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1, 0))
            + SUM(DISTINCT if(C.to_user_id = 0 2, 0)) AS followState
 ...' at line 7
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=34) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1, 0))
            + SUM(DISTINCT if(C.to_user_id = 0 2, 0)) AS followState
 ...' at line 7
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy89.selUserInfo(Unknown Source)
	at green.greengram.user.UserService.getUserInfo(UserService.java:69)
	at green.greengram.user.UserController.getUserInfo(UserController.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 10:48:00 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 10:48:00 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 10:48:03 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 5508 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 10:48:03 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:48:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 10:48:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 10:48:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:48:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:48:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:48:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:48:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:48:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 796 ms
[2024-12-09 10:48:04 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 10:48:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:48:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:48:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:48:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:48:04 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.681 seconds (process running for 2.014)
[2024-12-09 10:48:05 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 10:48:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 10:48:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 10:48:05 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 10:48:05 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5a41e461
[2024-12-09 10:48:05 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 10:48:05 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1, 0))
            + SUM(DISTINCT if(C.to_user_id = 0 2, 0)) AS followState
 ...' at line 7
[2024-12-09 10:48:05 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id, A.pic, A.created_at AS createdAt
            , IF(nick_name IS NULL, uid, nick_name) AS nickName
            , IFNULL(D.feedCnt, 0) AS feedCnt
            , IFNULL(D.likeCnt, 0) AS likeCnt
            , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`
            , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`
            , SUM(DISTINCT if(B.from_user_id = 0 1, 0))
            + SUM(DISTINCT if(C.to_user_id = 0 2, 0)) AS followState
        FROM user A
        LEFT JOIN (
            SELECT H.writer_user_id
                , COUNT(DISTINCT H.feed_id) AS feedCnt
                , COUNT(I.user_id) AS likeCnt
            FROM feed H
            LEFT JOIN feed_like I
             ON H.feed_id = I.feed_id
        WHERE H.writer_user_id = 0
        ) D
            ON A.user_id = D.writer_user_id
        LEFT JOIN user_follow B
            ON A.user_id = B.to_user_id
        LEFT JOIN user_follow C
            ON A.user_id = C.from_user_id
        WHERE A.user_id = 0
 {FAILED after 2 msec}
java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1, 0))
            + SUM(DISTINCT if(C.to_user_id = 0 2, 0)) AS followState
 ...' at line 7
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy89.selUserInfo(Unknown Source)
	at green.greengram.user.UserService.getUserInfo(UserService.java:69)
	at green.greengram.user.UserController.getUserInfo(UserController.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 10:48:05 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1, 0))
            + SUM(DISTINCT if(C.to_user_id = 0 2, 0)) AS followState
 ...' at line 7
### The error may exist in file [D:\RYU\GreenGramVer3\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT A.user_id, A.pic, A.created_at AS createdAt             , IF(nick_name IS NULL, uid, nick_name) AS nickName             , IFNULL(D.feedCnt, 0) AS feedCnt             , IFNULL(D.likeCnt, 0) AS likeCnt             , COUNT(DISTINCT B.from_user_id, B.to_user_id) AS `follower`             , COUNT(DISTINCT C.from_user_id, C.to_user_id) AS `following`             , SUM(DISTINCT if(B.from_user_id = ? 1, 0))             + SUM(DISTINCT if(C.to_user_id = ? 2, 0)) AS followState         FROM user A         LEFT JOIN (             SELECT H.writer_user_id                 , COUNT(DISTINCT H.feed_id) AS feedCnt                 , COUNT(I.user_id) AS likeCnt             FROM feed H             LEFT JOIN feed_like I              ON H.feed_id = I.feed_id         WHERE H.writer_user_id = ?         ) D             ON A.user_id = D.writer_user_id         LEFT JOIN user_follow B             ON A.user_id = B.to_user_id         LEFT JOIN user_follow C             ON A.user_id = C.from_user_id         WHERE A.user_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1, 0))
            + SUM(DISTINCT if(C.to_user_id = 0 2, 0)) AS followState
 ...' at line 7
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1, 0))
            + SUM(DISTINCT if(C.to_user_id = 0 2, 0)) AS followState
 ...' at line 7
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy89.selUserInfo(Unknown Source)
	at green.greengram.user.UserService.getUserInfo(UserService.java:69)
	at green.greengram.user.UserController.getUserInfo(UserController.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 10:50:37 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 10:50:37 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 10:50:39 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11080 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 10:50:39 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:50:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 10:50:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 10:50:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:50:40 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:50:40 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:50:40 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:50:40 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:50:40 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 776 ms
[2024-12-09 10:50:40 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 10:50:40 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:50:40 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:50:40 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:50:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:50:40 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.771 seconds (process running for 2.124)
[2024-12-09 10:50:45 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 10:50:45 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 10:50:45 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 10:50:45 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 10:50:45 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@474ce973
[2024-12-09 10:50:45 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 10:50:45 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 0, 1, 0))
        + MAX(IF(F2.to_user_id = 0, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 0;
 {executed in 0 msec}
[2024-12-09 10:50:45 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----|-----------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|-----------|---------|---------|----------|----------|----------------|------------|
|[null]  |null|null       |null     |0        |0         |0         |0               |[null]      |
|--------|----|-----------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 10:51:09 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 0, 1, 0))
        + MAX(IF(F2.to_user_id = 0, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 0;
 {executed in 0 msec}
[2024-12-09 10:51:09 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|----|-----------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|-----------|---------|---------|----------|----------|----------------|------------|
|[null]  |null|null       |null     |0        |0         |0         |0               |[null]      |
|--------|----|-----------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 10:52:16 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 10:52:16 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 10:52:18 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 2444 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 10:52:18 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:52:18 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 10:52:18 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 10:52:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:52:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:52:19 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:52:19 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:52:19 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:52:19 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 905 ms
[2024-12-09 10:52:19 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 10:52:19 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:52:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:52:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:52:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:52:20 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.913 seconds (process running for 2.268)
[2024-12-09 10:52:21 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 10:52:21 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 10:52:21 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 10:52:21 INFO http-nio-8080-exec-1] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=0, profileUserId=0)
[2024-12-09 10:52:21 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 10:52:21 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@65fa7ae7
[2024-12-09 10:52:21 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 10:52:21 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 0, 1, 0))
        + MAX(IF(F2.to_user_id = 0, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 0;
 {executed in 1 msec}
[2024-12-09 10:52:21 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|----|-----------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|-----------|---------|---------|----------|----------|----------------|------------|
|[null]  |null|null       |null     |0        |0         |0         |0               |[null]      |
|--------|----|-----------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 10:52:37 INFO http-nio-8080-exec-4] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=0, profileUserId=0)
[2024-12-09 10:52:37 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 0, 1, 0))
        + MAX(IF(F2.to_user_id = 0, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 0;
 {executed in 0 msec}
[2024-12-09 10:52:37 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----|-----------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|-----------|---------|---------|----------|----------|----------------|------------|
|[null]  |null|null       |null     |0        |0         |0         |0               |[null]      |
|--------|----|-----------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 10:54:33 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 10:54:33 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 10:54:36 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 1816 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 10:54:36 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:54:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 10:54:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 10:54:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:54:36 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:54:36 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:54:36 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:54:36 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:54:36 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 807 ms
[2024-12-09 10:54:36 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 10:54:37 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:54:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:54:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:54:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:54:37 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.781 seconds (process running for 2.131)
[2024-12-09 10:54:43 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 10:54:43 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 10:54:43 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 10:54:43 INFO http-nio-8080-exec-1] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=4, profileUserId=2)
[2024-12-09 10:54:43 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 10:54:43 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@743ae356
[2024-12-09 10:54:43 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 10:54:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 4, 1, 0))
        + MAX(IF(F2.to_user_id = 4, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 2;
 {executed in 1 msec}
[2024-12-09 10:54:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|2       |e061ad76-97d6-4cbf-82d7-48bd433899b2.png |2024-11-29 14:28:56 |ddd      |3        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 11:02:27 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:02:27 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:02:29 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 5864 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 11:02:29 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:02:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:02:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:02:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:02:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:02:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:02:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:02:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:02:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 791 ms
[2024-12-09 11:02:29 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 11:02:30 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:02:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:02:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:02:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:02:30 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.672 seconds (process running for 2.008)
[2024-12-09 11:02:34 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:02:34 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:02:34 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 11:02:34 INFO http-nio-8080-exec-5] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 213 ms
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7)
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7a6e8b5c
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7
    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 11:15:08 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1245d0e4)
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@63fbf6f2)
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@18418d4f)
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@39714036)
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@58f750c)
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@39ff5f29)
[2024-12-09 11:15:08 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2d4086ac)
[2024-12-09 11:20:02 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:20:02 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:20:04 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 5556 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 11:20:04 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:20:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:20:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:20:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:20:05 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:20:05 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:20:05 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:20:05 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:20:05 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 801 ms
[2024-12-09 11:20:05 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 11:20:05 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:20:05 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:20:05 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:20:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:20:06 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.745 seconds (process running for 2.107)
[2024-12-09 11:20:10 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:20:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:20:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 11:20:10 INFO http-nio-8080-exec-1] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=2, profileUserId=1)
[2024-12-09 11:20:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:20:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7fb116ff
[2024-12-09 11:20:10 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:20:10 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 2, 1, 0))
        + MAX(IF(F2.to_user_id = 2, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 1;
 {executed in 1 msec}
[2024-12-09 11:20:10 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |2024-11-28 17:30:10 |홍길동      |0        |0         |1         |2               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:39:12 WARN HikariPool-1 housekeeper] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=49m1s79ms695µs600ns).
[2024-12-09 12:49:07 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 12:49:07 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 12:49:09 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 8928 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 12:49:09 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:49:09 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 12:49:09 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 12:49:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:49:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:49:10 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:49:10 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:49:10 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:49:10 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 769 ms
[2024-12-09 12:49:10 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 12:49:10 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:49:10 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:49:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:49:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:49:10 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.636 seconds (process running for 1.984)
[2024-12-09 12:50:15 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 9164 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 12:50:15 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:50:15 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 12:50:15 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 12:50:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:50:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:50:16 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:50:16 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:50:16 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:50:16 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 783 ms
[2024-12-09 12:50:16 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 12:50:16 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:50:16 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:50:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:50:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:50:17 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.683 seconds (process running for 2.092)
[2024-12-09 12:50:25 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 12:50:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 12:50:25 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=null)
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1ab73e33
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 1 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 1 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:50:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@342fad01)
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@32af7c5b)
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@26a9503d)
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@306c6681)
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@79628228)
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@306664fb)
[2024-12-09 12:50:25 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5c22f272)
[2024-12-09 12:50:28 INFO http-nio-8080-exec-2] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:50:28 INFO http-nio-8080-exec-2] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:50:28 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=7)
[2024-12-09 12:50:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

        WHERE B.user_id=7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:50:28 INFO http-nio-8080-exec-1] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=7, profileUserId=7)
[2024-12-09 12:50:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd      |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:50:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 1 msec}
[2024-12-09 12:50:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:50:28 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 7, 1, 0))
        + MAX(IF(F2.to_user_id = 7, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 7;
 {executed in 1 msec}
[2024-12-09 12:50:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 12:50:28 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|7       |df661c81-3073-428c-8fd7-5c52579edffc.png |2024-12-06 13:08:45 |aaa      |0        |1         |1         |2               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:50:28 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@21fa9182)
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=null)
[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 1 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 1 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:50:32 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7ca25903)
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1db0cfa3)
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@280f7d7c)
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6080c2b9)
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@e04f5eb)
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1552ee5f)
[2024-12-09 12:50:32 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@46658514)
[2024-12-09 12:50:34 INFO http-nio-8080-exec-9] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=7, profileUserId=6)
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=6)
[2024-12-09 12:50:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 7, 1, 0))
        + MAX(IF(F2.to_user_id = 7, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 6;
 {executed in 1 msec}
[2024-12-09 12:50:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

        WHERE B.user_id=6

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:50:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|6       |null|2024-12-02 17:28:58 |길동       |0        |0         |4         |8               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic |islike |
|--------|---------|---------|--------------------|--------|---------|----|-------|
|32      |         |         |2024-12-04 15:51:36 |6       |길동       |null|1      |
|31      |월어ㅜㄹ!!   |월!월!     |2024-12-04 15:50:44 |6       |길동       |null|1      |
|30      |월!월!     |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null|1      |
|29      |월어ㅜㄹ어ㅜㄹ  |월        |2024-12-04 15:05:59 |6       |길동       |null|1      |
|--------|---------|---------|--------------------|--------|---------|----|-------|

[2024-12-09 12:50:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 12:50:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 12:50:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 30
 {executed in 1 msec}
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 12:50:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 12:50:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1f3ab22)
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@18432c30)
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1c347a7a)
[2024-12-09 12:50:34 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1a53ac4f)
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=null)
[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 1 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:50:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@691a9c35)
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@407fccb6)
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5b6fa5b2)
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@62e7f42c)
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5f213771)
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@61855a5f)
[2024-12-09 12:50:38 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@47e131e8)
[2024-12-09 12:51:33 INFO http-nio-8080-exec-9] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=7, profileUserId=6)
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=6)
[2024-12-09 12:51:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 7, 1, 0))
        + MAX(IF(F2.to_user_id = 7, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 6;
 {executed in 1 msec}
[2024-12-09 12:51:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

        WHERE B.user_id=6

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:51:33 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|6       |null|2024-12-02 17:28:58 |길동       |0        |0         |4         |8               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic |islike |
|--------|---------|---------|--------------------|--------|---------|----|-------|
|32      |         |         |2024-12-04 15:51:36 |6       |길동       |null|1      |
|31      |월어ㅜㄹ!!   |월!월!     |2024-12-04 15:50:44 |6       |길동       |null|1      |
|30      |월!월!     |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null|1      |
|29      |월어ㅜㄹ어ㅜㄹ  |월        |2024-12-04 15:05:59 |6       |길동       |null|1      |
|--------|---------|---------|--------------------|--------|---------|----|-------|

[2024-12-09 12:51:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 12:51:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 31
 {executed in 1 msec}
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 12:51:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 12:51:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 12:51:33 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2108bc68)
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6a715681)
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@30977621)
[2024-12-09 12:51:33 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@28c84f76)
[2024-12-09 12:51:34 INFO http-nio-8080-exec-6] [green.greengram.user.follow.UserFollowController] Posting user follow req: UserFollowReq(fromUserId=7, toUserId=6)
[2024-12-09 12:51:34 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id=7
        , to_user_id=6
 {executed in 2 msec}
[2024-12-09 12:51:35 INFO http-nio-8080-exec-4] [green.greengram.user.follow.UserFollowController] Deleting user follow req: UserFollowReq(fromUserId=7, toUserId=6)
[2024-12-09 12:51:35 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
        WHERE from_user_id=7
        AND to_user_id=6
 {executed in 0 msec}
[2024-12-09 12:51:35 INFO http-nio-8080-exec-10] [green.greengram.user.follow.UserFollowController] Posting user follow req: UserFollowReq(fromUserId=7, toUserId=6)
[2024-12-09 12:51:35 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id=7
        , to_user_id=6
 {executed in 0 msec}
[2024-12-09 12:51:36 INFO http-nio-8080-exec-7] [green.greengram.user.follow.UserFollowController] Deleting user follow req: UserFollowReq(fromUserId=7, toUserId=6)
[2024-12-09 12:51:36 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
        WHERE from_user_id=7
        AND to_user_id=6
 {executed in 3 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=null)
[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 1 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 1 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 1 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:51:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2a53b0ab)
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@30adcb36)
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@592eb771)
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@770137da)
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@40e00779)
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1e4a8028)
[2024-12-09 12:51:37 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@327329af)
[2024-12-09 12:51:38 INFO http-nio-8080-exec-5] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=7, profileUserId=7)
[2024-12-09 12:51:38 INFO http-nio-8080-exec-1] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:51:38 INFO http-nio-8080-exec-1] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:51:38 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=7)
[2024-12-09 12:51:38 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 7, 1, 0))
        + MAX(IF(F2.to_user_id = 7, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 7;
 {executed in 1 msec}
[2024-12-09 12:51:38 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

        WHERE B.user_id=7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:51:38 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|7       |df661c81-3073-428c-8fd7-5c52579edffc.png |2024-12-06 13:08:45 |aaa      |0        |1         |1         |2               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:51:38 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd      |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:51:38 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:51:38 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:51:38 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:51:38 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 12:51:38 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4e341e86)
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=null)
[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 1 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:51:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6d3fa923)
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@758516df)
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6c13ebc4)
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5f309fb8)
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4f5643cc)
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@12b88717)
[2024-12-09 12:51:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6106034f)
[2024-12-09 12:54:46 INFO http-nio-8080-exec-4] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=7, profileUserId=6)
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=6)
[2024-12-09 12:54:46 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 7, 1, 0))
        + MAX(IF(F2.to_user_id = 7, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 6;
 {executed in 1 msec}
[2024-12-09 12:54:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

        WHERE B.user_id=6

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:54:46 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|6       |null|2024-12-02 17:28:58 |길동       |0        |0         |4         |8               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic |islike |
|--------|---------|---------|--------------------|--------|---------|----|-------|
|32      |         |         |2024-12-04 15:51:36 |6       |길동       |null|1      |
|31      |월어ㅜㄹ!!   |월!월!     |2024-12-04 15:50:44 |6       |길동       |null|1      |
|30      |월!월!     |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null|1      |
|29      |월어ㅜㄹ어ㅜㄹ  |월        |2024-12-04 15:05:59 |6       |길동       |null|1      |
|--------|---------|---------|--------------------|--------|---------|----|-------|

[2024-12-09 12:54:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 12:54:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 12:54:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 12:54:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 12:54:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1d298632)
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@74d60eb1)
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@18cfa28a)
[2024-12-09 12:54:46 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7c9ece94)
[2024-12-09 12:54:47 INFO http-nio-8080-exec-8] [green.greengram.user.follow.UserFollowController] Posting user follow req: UserFollowReq(fromUserId=7, toUserId=6)
[2024-12-09 12:54:47 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
        SET from_user_id=7
        , to_user_id=6
 {executed in 0 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=null)
[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:54:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3f385f32)
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@22027474)
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@39433516)
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@41223497)
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3c9e224e)
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@d0e407d)
[2024-12-09 12:54:48 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2d453f4f)
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:54:49 INFO http-nio-8080-exec-7] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=7, profileUserId=6)
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=6)
[2024-12-09 12:54:49 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 7, 1, 0))
        + MAX(IF(F2.to_user_id = 7, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 6;
 {executed in 0 msec}
[2024-12-09 12:54:49 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

        WHERE B.user_id=6

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:54:49 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|6       |null|2024-12-02 17:28:58 |길동       |1        |0         |4         |8               |1           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|----|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic |islike |
|--------|---------|---------|--------------------|--------|---------|----|-------|
|32      |         |         |2024-12-04 15:51:36 |6       |길동       |null|1      |
|31      |월어ㅜㄹ!!   |월!월!     |2024-12-04 15:50:44 |6       |길동       |null|1      |
|30      |월!월!     |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null|1      |
|29      |월어ㅜㄹ어ㅜㄹ  |월        |2024-12-04 15:05:59 |6       |길동       |null|1      |
|--------|---------|---------|--------------------|--------|---------|----|-------|

[2024-12-09 12:54:49 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 12:54:49 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:49 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 12:54:49 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:49 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 12:54:49 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:49 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 12:54:49 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1ee6c33d)
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5c4b17ba)
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@361c4e6c)
[2024-12-09 12:54:49 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@564d55b2)
[2024-12-09 12:54:49 INFO http-nio-8080-exec-8] [green.greengram.user.follow.UserFollowController] Deleting user follow req: UserFollowReq(fromUserId=7, toUserId=6)
[2024-12-09 12:54:49 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
        WHERE from_user_id=7
        AND to_user_id=6
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=null)
[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 1 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 12:54:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@544a9aaf)
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@62350ab0)
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6049c0e0)
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7f34d4ef)
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7f2ba644)
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3581539b)
[2024-12-09 12:54:50 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1be1db0b)
[2024-12-09 14:18:00 WARN HikariPool-1 housekeeper] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=45m4s778ms752µs900ns).
[2024-12-09 14:19:24 INFO http-nio-8080-exec-2] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=7, profileUserId=7)
[2024-12-09 14:19:24 INFO http-nio-8080-exec-9] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 14:19:24 INFO http-nio-8080-exec-9] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 14:19:24 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=7)
[2024-12-09 14:19:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

        WHERE B.user_id=7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 14:19:24 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 7, 1, 0))
        + MAX(IF(F2.to_user_id = 7, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 7;
 {executed in 0 msec}
[2024-12-09 14:19:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd      |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 14:19:24 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|7       |df661c81-3073-428c-8fd7-5c52579edffc.png |2024-12-06 13:08:45 |aaa      |0        |1         |1         |2               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 14:19:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 14:19:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 14:19:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 14:19:24 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 14:19:24 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3c8beb2a)
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=null)
[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 33
 {executed in 1 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 14:20:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@30cce630)
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2c689306)
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@16544149)
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@51fc3a4d)
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6d6bb24)
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6ecee85b)
[2024-12-09 14:20:03 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5aa4a2c2)
[2024-12-09 14:20:28 INFO http-nio-8080-exec-3] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=7, profileUserId=7)
[2024-12-09 14:20:28 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 14:20:28 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 14:20:28 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=7)
[2024-12-09 14:20:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 7, 1, 0))
        + MAX(IF(F2.to_user_id = 7, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 7;
 {executed in 0 msec}
[2024-12-09 14:20:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|7       |df661c81-3073-428c-8fd7-5c52579edffc.png |2024-12-06 13:08:45 |aaa      |0        |1         |1         |2               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 14:20:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

        WHERE B.user_id=7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 14:20:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd      |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 14:20:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 14:20:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 14:20:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 14:20:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 14:20:28 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5a6798da)
[2024-12-09 14:54:59 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 7 class path changes (1 addition, 0 deletions, 6 modifications)
[2024-12-09 14:54:59 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 14:54:59 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 14:54:59 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 14:54:59 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 9164 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 14:54:59 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 14:54:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 14:54:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 14:54:59 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 14:54:59 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 14:54:59 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 14:54:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 218 ms
[2024-12-09 14:54:59 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 14:54:59 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 14:54:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 14:54:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 14:54:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 14:54:59 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.373 seconds (process running for 7484.996)
[2024-12-09 14:54:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:07:30 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-09 15:07:30 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:07:30 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 9164 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 15:07:30 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:07:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:07:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:07:30 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:07:30 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:07:30 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:07:30 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 303 ms
[2024-12-09 15:07:30 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 15:07:30 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:07:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:07:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:07:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:07:30 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.496 seconds (process running for 8235.911)
[2024-12-09 15:07:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:22:36 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-09 15:22:36 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:22:36 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 9164 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 15:22:36 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:22:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:22:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:22:37 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:22:37 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:22:37 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:22:37 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 185 ms
[2024-12-09 15:22:37 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 15:22:37 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:22:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:22:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:22:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:22:37 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.358 seconds (process running for 9142.28)
[2024-12-09 15:22:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:35:05 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 30 class path changes (0 additions, 0 deletions, 30 modifications)
[2024-12-09 15:35:05 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:35:05 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 9164 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 15:35:05 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:35:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:35:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:35:06 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:35:06 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:35:06 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:35:06 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 190 ms
[2024-12-09 15:35:06 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 15:35:06 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:35:06 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:35:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:35:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:35:06 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.346 seconds (process running for 9891.255)
[2024-12-09 15:35:06 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:35:56 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-09 15:35:56 INFO Thread-19] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:35:56 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 9164 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 15:35:56 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:35:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:35:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:35:56 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:35:56 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:35:56 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:35:56 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 173 ms
[2024-12-09 15:35:56 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 15:35:56 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:35:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:35:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:35:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:35:56 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.313 seconds (process running for 9941.887)
[2024-12-09 15:35:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:37:06 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-09 15:37:06 INFO Thread-23] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:37:06 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 9164 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 15:37:06 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:37:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:37:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:37:06 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:37:06 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:37:06 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:37:06 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 166 ms
[2024-12-09 15:37:06 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 15:37:06 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:37:06 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:37:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:37:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:37:06 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.306 seconds (process running for 10011.876)
[2024-12-09 15:37:06 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:37:39 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-09 15:37:39 INFO Thread-27] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:37:39 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 9164 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 15:37:39 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:37:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:37:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:37:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:37:39 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:37:40 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:37:40 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 165 ms
[2024-12-09 15:37:40 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 15:37:40 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:37:40 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:37:40 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:37:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:37:40 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.29 seconds (process running for 10045.219)
[2024-12-09 15:37:40 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:37:59 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 8436 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 15:37:59 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:37:59 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:37:59 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:37:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:37:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:37:59 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:37:59 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:37:59 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:37:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 813 ms
[2024-12-09 15:37:59 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 15:38:00 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:38:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:38:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:38:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:38:00 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.778 seconds (process running for 2.128)
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=null)
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@572c75a7
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:39:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@23f3b4ff)
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@32549830)
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@23ac1751)
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@32550086)
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@cbf0e7f)
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1abc82c0)
[2024-12-09 15:39:08 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@59e91859)
[2024-12-09 15:39:20 INFO http-nio-8080-exec-6] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 15:39:20 INFO http-nio-8080-exec-6] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 15:39:20 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=7)
[2024-12-09 15:39:20 INFO http-nio-8080-exec-5] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=7, profileUserId=7)
[2024-12-09 15:39:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

        WHERE B.user_id=7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 15:39:20 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 7, 1, 0))
        + MAX(IF(F2.to_user_id = 7, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 7;
 {executed in 1 msec}
[2024-12-09 15:39:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd      |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 15:39:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:39:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:39:20 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|7       |df661c81-3073-428c-8fd7-5c52579edffc.png |2024-12-06 13:08:45 |aaa      |0        |1         |1         |2               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 15:39:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:39:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 15:39:20 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2aa2d168)
[2024-12-09 15:40:29 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-09 15:40:29 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:40:29 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 15:40:29 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 15:40:29 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 8436 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 15:40:29 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:40:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:40:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:40:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:40:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:40:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:40:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 202 ms
[2024-12-09 15:40:29 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 15:40:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:40:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:40:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:40:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:40:29 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.374 seconds (process running for 151.713)
[2024-12-09 15:40:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:40:54 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 10348 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 15:40:54 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:40:54 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:40:54 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:40:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:40:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:40:55 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:40:55 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:40:55 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:40:55 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 789 ms
[2024-12-09 15:40:55 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 15:40:55 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:40:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:40:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:40:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:40:55 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.72 seconds (process running for 2.061)
[2024-12-09 15:40:59 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:40:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:40:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=null)
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6e93b702
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:41:48 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@58b27223)
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@492db4f9)
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@737bb8e3)
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7d775e6a)
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@369f088d)
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1231f8db)
[2024-12-09 15:41:48 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3ca3e6de)
[2024-12-09 15:41:58 INFO http-nio-8080-exec-7] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 15:41:58 INFO http-nio-8080-exec-7] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 15:41:58 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=7)
[2024-12-09 15:41:58 INFO http-nio-8080-exec-6] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=7, profileUserId=7)
[2024-12-09 15:41:58 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

        WHERE B.user_id=7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 15:41:58 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 7, 1, 0))
        + MAX(IF(F2.to_user_id = 7, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 7;
 {executed in 1 msec}
[2024-12-09 15:41:58 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd      |asda     |2024-12-06 13:09:00 |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |1      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 15:41:58 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:41:58 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:41:58 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|7       |df661c81-3073-428c-8fd7-5c52579edffc.png |2024-12-06 13:08:45 |aaa      |0        |1         |1         |2               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 15:41:58 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:41:58 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |df661c81-3073-428c-8fd7-5c52579edffc.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 15:41:58 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=df661c81-3073-428c-8fd7-5c52579edffc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5e23b6aa)
[2024-12-09 15:46:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 15:46:48 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 15:46:50 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 8244 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 15:46:50 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:46:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:46:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:46:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:46:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:46:51 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:46:51 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:46:51 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:46:51 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 785 ms
[2024-12-09 15:46:51 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 15:46:51 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:46:51 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:46:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:46:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:46:51 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.753 seconds (process running for 2.16)
[2024-12-09 15:46:55 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:46:55 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:46:56 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 15:46:56 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 15:46:56 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@425322a7
[2024-12-09 15:46:56 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 15:46:56 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. update user
        set pic = '54d24597-b9ab-4680-ae13-81a8f38424c0.png'
        where user_id = 7
 {executed in 2 msec}
[2024-12-09 15:47:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 15:47:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 15:47:31 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11680 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 15:47:31 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:47:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:47:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:47:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:47:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:47:31 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:47:31 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:47:31 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:47:31 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 795 ms
[2024-12-09 15:47:32 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 15:47:32 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:47:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:47:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:47:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:47:32 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.713 seconds (process running for 2.109)
[2024-12-09 15:47:38 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:47:38 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:47:38 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 15:47:38 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 15:47:38 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@a3b5c2c
[2024-12-09 15:47:38 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 15:47:38 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. update user
        set pic = '807255f5-cb28-4fbf-9ae8-316ac4c68efe.png'
        where user_id = 7
 {executed in 0 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 7
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=null)
[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 7

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |1      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |1      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |1      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |1      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |1      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |1      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 1 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 15:47:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=807255f5-cb28-4fbf-9ae8-316ac4c68efe.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2b5b3686)
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=1, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2898a028)
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=1, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@723849d2)
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=1, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@588f6dd3)
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=1, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2a928f42)
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@47e6e3d8)
[2024-12-09 15:47:40 INFO http-nio-8080-exec-4] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=1, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@77a0442f)
[2024-12-09 16:02:56 INFO http-nio-8080-exec-9] [green.greengram.user.UserService] hashedPassword: $2a$10$6L8RwZ.iBFJeXMgeFCL.OuPD6OnFLNF7ndXzUwMhxl.mk3wCTa7yK
[2024-12-09 16:02:56 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into user
        set uid = 'ddd'
          , upw = '$2a$10$6L8RwZ.iBFJeXMgeFCL.OuPD6OnFLNF7ndXzUwMhxl.mk3wCTa7yK'
          , nick_name = 'ddd'
          , pic = NULL
 {executed in 0 msec}
[2024-12-09 16:02:56 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into user
        set uid = 'ddd'
          , upw = '$2a$10$6L8RwZ.iBFJeXMgeFCL.OuPD6OnFLNF7ndXzUwMhxl.mk3wCTa7yK'
          , nick_name = 'ddd'
          , pic = NULL
 {executed in 0 msec}
[2024-12-09 16:02:56 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|8         |
|----------|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id AS userId
        , ifnull(nick_name,uid) AS nickName
        , pic
        , upw
        FROM user
        WHERE uid = 'ddd'
 {executed in 0 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|----|-------------------------------------------------------------|
|user_id |nickname |pic |upw                                                          |
|--------|---------|----|-------------------------------------------------------------|
|8       |ddd      |null|$2a$10$6L8RwZ.iBFJeXMgeFCL.OuPD6OnFLNF7ndXzUwMhxl.mk3wCTa7yK |
|--------|---------|----|-------------------------------------------------------------|

[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |0      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 1 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 1 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:02:59 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=807255f5-cb28-4fbf-9ae8-316ac4c68efe.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@44145b5d)
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3c7b10e3)
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@45d6d6e6)
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3957ad63)
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5f7fd7a7)
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3b6738a3)
[2024-12-09 16:02:59 INFO http-nio-8080-exec-1] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4875b8cf)
[2024-12-09 16:03:01 INFO http-nio-8080-exec-7] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 16:03:01 INFO http-nio-8080-exec-7] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 16:03:01 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=8)
[2024-12-09 16:03:01 INFO http-nio-8080-exec-6] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=8, profileUserId=8)
[2024-12-09 16:03:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

        WHERE B.user_id=8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:03:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-09 16:03:01 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 8, 1, 0))
        + MAX(IF(F2.to_user_id = 8, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 8;
 {executed in 0 msec}
[2024-12-09 16:03:01 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|8       |null|2024-12-09 16:02:56 |ddd      |0        |0         |0         |0               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:03:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. update user
        set pic = '05175a35-75ca-4264-9696-f1dd9cc55b82.png'
        where user_id = 8
 {executed in 2 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |0      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:04:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=807255f5-cb28-4fbf-9ae8-316ac4c68efe.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@49e8fb58)
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6f9dd71)
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@50cbaf35)
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5efe3c38)
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@50422e84)
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@189863a8)
[2024-12-09 16:04:30 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@15a7c589)
[2024-12-09 16:04:43 INFO http-nio-8080-exec-2] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=8, profileUserId=8)
[2024-12-09 16:04:43 INFO http-nio-8080-exec-10] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 16:04:43 INFO http-nio-8080-exec-10] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 16:04:43 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=8)
[2024-12-09 16:04:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 8, 1, 0))
        + MAX(IF(F2.to_user_id = 8, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 8;
 {executed in 1 msec}
[2024-12-09 16:04:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|8       |05175a35-75ca-4264-9696-f1dd9cc55b82.png |2024-12-09 16:02:56 |ddd      |0        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:04:43 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

        WHERE B.user_id=8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:04:43 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-09 16:05:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. update user
        set pic = 'd857c9c8-d228-4502-8dd8-84cd3fe1f0f4.jpg'
        where user_id = 8
 {executed in 1 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |0      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 1 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 1 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:05:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=807255f5-cb28-4fbf-9ae8-316ac4c68efe.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@585ce49b)
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@11931433)
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@67e2ba56)
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@b50775e)
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@34973293)
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3d2c9abe)
[2024-12-09 16:05:53 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4feea747)
[2024-12-09 16:05:58 INFO http-nio-8080-exec-6] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=8, profileUserId=8)
[2024-12-09 16:05:58 INFO http-nio-8080-exec-8] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 16:05:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 16:05:58 INFO http-nio-8080-exec-8] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=8)
[2024-12-09 16:05:58 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

        WHERE B.user_id=8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:05:58 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 8, 1, 0))
        + MAX(IF(F2.to_user_id = 8, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 8;
 {executed in 4 msec}
[2024-12-09 16:05:58 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-09 16:05:58 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|8       |d857c9c8-d228-4502-8dd8-84cd3fe1f0f4.jpg |2024-12-09 16:02:56 |ddd      |0        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:06:06 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. update user
        set pic = '7b31f546-9999-4300-b58f-bc8f090e6779.png'
        where user_id = 8
 {executed in 2 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |0      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 1 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 1 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 1 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:06:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=807255f5-cb28-4fbf-9ae8-316ac4c68efe.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@114d1f3f)
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@31e7187f)
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@34d7ab42)
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2c9a7fe8)
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@555739a3)
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5c7ae796)
[2024-12-09 16:06:09 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@55fecae0)
[2024-12-09 16:06:12 INFO http-nio-8080-exec-10] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=8, profileUserId=8)
[2024-12-09 16:06:12 INFO http-nio-8080-exec-5] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 16:06:12 INFO http-nio-8080-exec-5] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 16:06:12 INFO http-nio-8080-exec-5] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=8)
[2024-12-09 16:06:12 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

        WHERE B.user_id=8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:06:12 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 8, 1, 0))
        + MAX(IF(F2.to_user_id = 8, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 8;
 {executed in 1 msec}
[2024-12-09 16:06:12 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-09 16:06:12 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|8       |7b31f546-9999-4300-b58f-bc8f090e6779.png |2024-12-09 16:02:56 |ddd      |0        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |0      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:06:13 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=807255f5-cb28-4fbf-9ae8-316ac4c68efe.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@75dfc4cc)
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@76961ab5)
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1e99973a)
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3f669bbc)
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3494c138)
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@729136ad)
[2024-12-09 16:06:13 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@20635f82)
[2024-12-09 16:21:49 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-09 16:21:49 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:21:49 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 16:21:49 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 16:21:49 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11680 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 16:21:49 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:21:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:21:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:21:50 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:21:50 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:21:50 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:21:50 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 201 ms
[2024-12-09 16:21:50 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 16:21:50 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:21:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:21:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:21:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:21:50 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.403 seconds (process running for 2059.925)
[2024-12-09 16:21:50 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 16:24:32 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11652 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 16:24:32 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:24:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 16:24:32 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 16:24:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:24:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:24:33 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:24:33 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:24:33 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:24:33 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 867 ms
[2024-12-09 16:24:33 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 16:24:33 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:24:34 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:24:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:24:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:24:34 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.76 seconds (process running for 2.113)
[2024-12-09 16:24:35 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 16:24:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 16:24:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 16:24:35 INFO http-nio-8080-exec-2] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 16:24:35 INFO http-nio-8080-exec-2] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 16:24:35 INFO http-nio-8080-exec-1] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=8, profileUserId=8)
[2024-12-09 16:24:35 INFO http-nio-8080-exec-2] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=8)
[2024-12-09 16:24:35 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 16:24:35 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@fae62d8
[2024-12-09 16:24:35 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 16:24:35 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

        WHERE B.user_id=8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:24:35 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 8, 1, 0))
        + MAX(IF(F2.to_user_id = 8, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 8;
 {executed in 1 msec}
[2024-12-09 16:24:35 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-09 16:24:35 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|8       |7b31f546-9999-4300-b58f-bc8f090e6779.png |2024-12-09 16:02:56 |ddd      |0        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:24:38 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. update user
        set pic = '9f577304-05a8-4f3f-ae86-1536337e0728.png'
        where user_id = 8
 {executed in 2 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |0      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 1 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:24:40 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=807255f5-cb28-4fbf-9ae8-316ac4c68efe.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@7856235c)
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@138d0abb)
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@50d0e25)
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@26648826)
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6fe11375)
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@14c214e0)
[2024-12-09 16:24:40 INFO http-nio-8080-exec-10] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@79535c7b)
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |0      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 1 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 16:24:54 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=807255f5-cb28-4fbf-9ae8-316ac4c68efe.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@34ebad67)
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6579ae7c)
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@a5a5fb1)
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5be77ea0)
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@328e602e)
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1a2c324d)
[2024-12-09 16:24:54 INFO http-nio-8080-exec-9] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@42d3416e)
[2024-12-09 16:40:04 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-09 16:40:04 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:40:04 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 16:40:04 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 16:40:04 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11652 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 16:40:04 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:40:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:40:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:40:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:40:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:40:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:40:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 211 ms
[2024-12-09 16:40:04 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 16:40:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:40:05 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:40:05 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:40:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:40:05 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.368 seconds (process running for 932.973)
[2024-12-09 16:40:05 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 16:40:15 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-09 16:40:15 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:40:15 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 11652 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 16:40:15 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:40:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:40:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:40:15 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:40:15 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:40:15 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:40:15 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 186 ms
[2024-12-09 16:40:15 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 16:40:15 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:40:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:40:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:40:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:40:15 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 0.327 seconds (process running for 943.943)
[2024-12-09 16:40:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 17:55:51 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 7712 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 17:55:51 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 17:55:51 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 17:55:51 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 17:55:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 17:55:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 17:55:52 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 17:55:52 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 17:55:52 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 17:55:52 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 787 ms
[2024-12-09 17:55:52 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 17:55:52 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 17:55:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 17:55:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 17:55:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 17:55:52 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 1.776 seconds (process running for 2.2)
[2024-12-09 17:56:04 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 17:56:04 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 17:56:04 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 17:56:04 INFO http-nio-8080-exec-6] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 17:56:04 INFO http-nio-8080-exec-6] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 17:56:04 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1b8b59bf
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |0      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 1 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 1 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 17:56:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=807255f5-cb28-4fbf-9ae8-316ac4c68efe.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3c3ec22c)
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@63b5cd30)
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@791d9747)
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@70dbf286)
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3abe7113)
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@772fe739)
[2024-12-09 17:56:05 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@621de134)
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |0      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 1 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 17:56:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=807255f5-cb28-4fbf-9ae8-316ac4c68efe.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6919599f)
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@bf262cd)
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6f77878e)
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5071211d)
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@73075f2d)
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6bfbaf8a)
[2024-12-09 17:56:08 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@38e30e8c)
[2024-12-09 18:09:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 18:09:56 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 18:37:20 INFO restartedMain] [green.greengram.GreenGramVer3Application] Starting GreenGramVer3Application using Java 17.0.13 with PID 8496 (D:\RYU\GreenGramVer3\build\classes\java\main started by Administrator in D:\RYU\GreenGramVer3)
[2024-12-09 18:37:20 INFO restartedMain] [green.greengram.GreenGramVer3Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 18:37:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 18:37:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 18:37:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 18:37:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 18:37:20 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 18:37:20 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 18:37:20 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 18:37:20 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 940 ms
[2024-12-09 18:37:21 INFO restartedMain] [green.greengram.common.MyFileUtils] MyFileUtils: uploadPath = D:/2024-02/download/greengram_ver3
[2024-12-09 18:37:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 18:37:21 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 18:37:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 18:37:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 18:37:21 INFO restartedMain] [green.greengram.GreenGramVer3Application] Started GreenGramVer3Application in 2.081 seconds (process running for 2.561)
[2024-12-09 18:37:23 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 18:37:23 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 18:37:23 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@280db6f3
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 11 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |0      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 1 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 1 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 0 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 18:37:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=807255f5-cb28-4fbf-9ae8-316ac4c68efe.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@e15500a)
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@4275f2a7)
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3892794d)
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@6563de59)
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@41d257ff)
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@2cdf65a8)
[2024-12-09 18:37:23 INFO http-nio-8080-exec-6] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@72c296f)
[2024-12-09 18:38:01 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed
            set writer_user_id = 8
                , contents = ''
                , location = 'bfx'
 {executed in 3 msec}
[2024-12-09 18:38:01 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed
            set writer_user_id = 8
                , contents = ''
                , location = 'bfx'
 {executed in 0 msec}
[2024-12-09 18:38:01 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|34        |
|----------|

[2024-12-09 18:38:01 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_pic
        ( feed_id, pic)
        values
         (  
            34, '92f67ab5-53c5-4fe5-a60c-2574be108490.png'
         )
 {executed in 0 msec}
[2024-12-09 18:38:02 INFO http-nio-8080-exec-3] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@7b61f506
[2024-12-09 18:38:02 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed_like
        where user_id =8
        and feed_id =34
 {executed in 0 msec}
[2024-12-09 18:38:02 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_like
        set
        feed_id =34
        , user_id =8
 {executed in 3 msec}
[2024-12-09 18:38:04 INFO http-nio-8080-exec-5] [green.greengram.Feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: green.greengram.Feed.comment.model.FeedCommentPostReq@6a1a9e62
[2024-12-09 18:38:04 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. insert into feed_comment
        ( feed_id, user_id, comment)
        values
        ( 34, 8, 'bxngc' )
 {executed in 4 msec}
[2024-12-09 18:38:04 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: insert into feed_comment
        ( feed_id, user_id, comment)
        values
        ( 34, 8, 'bxngc' )
 {executed in 0 msec}
[2024-12-09 18:38:04 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|35        |
|----------|

[2024-12-09 18:38:06 INFO http-nio-8080-exec-8] [green.greengram.Feed.comment.FeedCommentController] FeedCommentController > delFeedComment > p: FeedCommentDelReq(feedCommentId=35, userId=8)
[2024-12-09 18:38:06 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_comment
        WHERE feed_comment_id = 35
        AND user_id = 8
 {executed in 1 msec}
[2024-12-09 18:38:07 INFO http-nio-8080-exec-2] [green.greengram.Feed.like.FeedLikeController] FeedLikeController::feedLikeToggle > p: green.greengram.Feed.like.model.FeedLikeReq@3b3dab2c
[2024-12-09 18:38:07 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. delete from feed_like
        where user_id =8
        and feed_id =34
 {executed in 2 msec}
[2024-12-09 18:38:12 INFO http-nio-8080-exec-7] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 18:38:12 INFO http-nio-8080-exec-7] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 18:38:12 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=8)
[2024-12-09 18:38:12 INFO http-nio-8080-exec-6] [green.greengram.user.UserController] userController>UserInfoGetReq:UserInfoGetReq(signedUserId=8, profileUserId=8)
[2024-12-09 18:38:12 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

        WHERE B.user_id=8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 18:38:12 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|34      |         |bfx      |2024-12-09 18:38:01 |8       |ddd      |9f577304-05a8-4f3f-ae86-1536337e0728.png |0      |
|--------|---------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 18:38:12 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-09 18:38:12 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|92f67ab5-53c5-4fe5-a60c-2574be108490.png |
|-----------------------------------------|

[2024-12-09 18:38:12 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount
        , MAX(IF(F1.from_user_id = 8, 1, 0))
        + MAX(IF(F2.to_user_id = 8, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
        ON A.user_id = F1.to_user_id
        LEFT JOIN user_follow F2
        ON A.user_id = F2.from_user_id
        LEFT JOIN feed F3
        ON A.user_id = F3.writer_user_id
        LEFT JOIN feed_like F4
        ON F3.feed_id = F4.feed_id
        WHERE A.user_id = 8;
 {executed in 4 msec}
[2024-12-09 18:38:12 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:38:12 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:38:12 INFO http-nio-8080-exec-7] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=8, feedId=34, contents=, location=bfx, createdAt=2024-12-09 18:38:01, writerNm=ddd, writerPic=9f577304-05a8-4f3f-ae86-1536337e0728.png, isLike=0, pics=[92f67ab5-53c5-4fe5-a60c-2574be108490.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@64ae65cc)
[2024-12-09 18:38:12 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|8       |9f577304-05a8-4f3f-ae86-1536337e0728.png |2024-12-09 16:02:56 |ddd      |0        |0         |1         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 18:38:15 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "org.springframework.web.multipart.MultipartFile.transferTo(java.io.File)" because "mf" is null] with root cause
java.lang.NullPointerException: Cannot invoke "org.springframework.web.multipart.MultipartFile.transferTo(java.io.File)" because "mf" is null
	at green.greengram.common.MyFileUtils.transferTo(MyFileUtils.java:63)
	at green.greengram.user.UserService.patchUserPic(UserService.java:93)
	at green.greengram.user.UserController.patchProfilePic(UserController.java:57)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [green.greengram.common.model.Paging] page = 1, size = 20
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [green.greengram.Feed.model.FeedGetReq] page: 1, size: null, userId: 8
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
        A.feed_id AS feedId
        , A.contents
        , A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , if(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , if(C.feed_id IS NULL, 0, 1) AS isLike
    FROM feed A
    INNER JOIN user B
       ON A.writer_user_id =B.user_id
    LEFT JOIN feed_like C
       ON A.feed_id = C.feed_id
      AND C.user_id = 8

    ORDER BY A.feed_id DESC
    LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|34      |             |bfx      |2024-12-09 18:38:01 |8       |ddd      |9f577304-05a8-4f3f-ae86-1536337e0728.png |0      |
|33      |asd          |asda     |2024-12-06 13:09:00 |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |0      |
|32      |             |         |2024-12-04 15:51:36 |6       |길동       |null                                     |0      |
|31      |월어ㅜㄹ!!       |월!월!     |2024-12-04 15:50:44 |6       |길동       |null                                     |0      |
|30      |월!월!         |월워루어ㅜㄹ   |2024-12-04 15:50:08 |6       |길동       |null                                     |0      |
|29      |월어ㅜㄹ어ㅜㄹ      |월        |2024-12-04 15:05:59 |6       |길동       |null                                     |0      |
|27      |치킨어택         |ㅇㅇ       |2024-12-02 17:30:20 |5       |ksj      |9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg |0      |
|24      |I am panguin |남극       |2024-11-29 16:46:41 |1       |홍길동      |6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 34
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|92f67ab5-53c5-4fe5-a60c-2574be108490.png |
|-----------------------------------------|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=34
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 33
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=33
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|-----------------------------------------|
|feed_comment_id |comment |user_id |writernm |pic                                      |
|----------------|--------|--------|---------|-----------------------------------------|
|34              |d       |7       |aaa      |807255f5-cb28-4fbf-9ae8-316ac4c68efe.png |
|----------------|--------|--------|---------|-----------------------------------------|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 32
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b81a3507-42a5-414b-9168-b8be5800e5a0.png |
|-----------------------------------------|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=32
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 31
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|609d0ee0-3685-457c-874c-786069e0d4ea.jpg |
|-----------------------------------------|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=31
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 30
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1a400cd-f80d-4ddf-af96-20cad31df431.htm |
|-----------------------------------------|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=30
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 29
 {executed in 1 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|db47b13b-e275-4882-ac2c-a748be410e68.webp |
|------------------------------------------|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=29
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 27
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=27
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select pic
            from feed_pic
        where feed_id = 24
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-09 18:38:18 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT C.feed_comment_id AS feedCommentId,
        C.comment,
        C.user_id AS writerUserId,
        if(U.nick_name IS NULL, U.uid, U.nick_name) AS writerNm,
        U.pic AS writerPic
        FROM feed_comment C
        JOIN user U
        ON U.user_id=C.user_id
        WHERE C.feed_id=24
        ORDER BY feed_comment_id DESC
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|---------|----|
|feed_comment_id |comment |user_id |writernm |pic |
|----------------|--------|--------|---------|----|
|----------------|--------|--------|---------|----|

[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=8, feedId=34, contents=, location=bfx, createdAt=2024-12-09 18:38:01, writerNm=ddd, writerPic=9f577304-05a8-4f3f-ae86-1536337e0728.png, isLike=0, pics=[92f67ab5-53c5-4fe5-a60c-2574be108490.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@575f0851)
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=7, feedId=33, contents=asd, location=asda, createdAt=2024-12-06 13:09:00, writerNm=aaa, writerPic=807255f5-cb28-4fbf-9ae8-316ac4c68efe.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@208c4bd3)
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=32, contents=, location=, createdAt=2024-12-04 15:51:36, writerNm=길동, writerPic=null, isLike=0, pics=[b81a3507-42a5-414b-9168-b8be5800e5a0.png], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@77ebeae7)
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=31, contents=월어ㅜㄹ!!, location=월!월!, createdAt=2024-12-04 15:50:44, writerNm=길동, writerPic=null, isLike=0, pics=[609d0ee0-3685-457c-874c-786069e0d4ea.jpg], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5ee35ee6)
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=30, contents=월!월!, location=월워루어ㅜㄹ, createdAt=2024-12-04 15:50:08, writerNm=길동, writerPic=null, isLike=0, pics=[a1a400cd-f80d-4ddf-af96-20cad31df431.htm], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@71d1d8eb)
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=6, feedId=29, contents=월어ㅜㄹ어ㅜㄹ, location=월, createdAt=2024-12-04 15:05:59, writerNm=길동, writerPic=null, isLike=0, pics=[db47b13b-e275-4882-ac2c-a748be410e68.webp], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@3341c7d1)
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=5, feedId=27, contents=치킨어택, location=ㅇㅇ, createdAt=2024-12-02 17:30:20, writerNm=ksj, writerPic=9da04bc8-df41-4d69-ad50-dd8cc59e250e.jpg, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@1bd5bf8c)
[2024-12-09 18:38:18 INFO http-nio-8080-exec-3] [green.greengram.Feed.FeedController] feedGetRes: FeedGetRes(writerUserId=1, feedId=24, contents=I am panguin, location=남극, createdAt=2024-11-29 16:46:41, writerNm=홍길동, writerPic=6cb4e4da-ef4a-4ed6-b3f8-8d35508094fc.png, isLike=0, pics=[], comment=green.greengram.Feed.comment.model.FeedCommentGetRes@5f05d67e)
